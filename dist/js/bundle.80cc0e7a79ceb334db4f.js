webpackJsonp([0],[,function(t,e,i){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}i(2),i(4);var s=i(6),h=a(s);i(9);var d=i(11),o=a(d),n=i(14),l=a(n),r=i(74),g=a(r),c=i(75),m=a(c),u=i(76),f=a(u),p=p||{};p.game=new h.default.Game("100%","100%",h.default.AUTO,"root"),p.BootState=o.default,p.LoadState=l.default,p.StartState=g.default,p.PlayState=m.default,p.OverState=f.default,p.game.state.add("Boot",p.BootState),p.game.state.add("Load",p.LoadState),p.game.state.add("Start",p.StartState),p.game.state.add("Play",p.PlayState),p.game.state.add("Over",p.OverState),p.game.state.start("Boot")},,,,,,,,function(t,e){},,function(t,e,i){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}var s=i(12),h=a(s),d=i(13),o=a(d),n={init:function(){this.game.stage.backgroundColor="#000",this.scale.scaleMode=Phaser.ScaleManager.SHOW_ALL,this.scale.pageAlignHorizontally=!0,this.scale.pageAlignVertically=!0},preload:function(){this.game.load.image("preload",h.default),this.game.load.spritesheet("mycloud",o.default,248,240)},create:function(){this.game.state.start("Load")}};t.exports=n},function(t,e,i){t.exports=i.p+"image/57ca1a2085d82f0574e3ef740b9a5ead.gif"},function(t,e,i){t.exports=i.p+"image/d8c27ec89099c52ac6784fb39a1e6b9c.png"},function(t,e,i){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}var s=i(15),h=a(s),d=i(16),o=a(d),n=i(17),l=a(n),r=i(18),g=a(r),c=i(19),m=a(c),u=i(20),f=a(u),p=i(21),b=a(p),y=i(22),w=a(y),v=i(23),x=a(v),_=i(24),k=a(_),T=i(25),S=a(T),C=i(26),I=a(C),P=i(27),E=a(P),M=i(28),D=a(M),z=i(29),W=a(z),O=i(30),A=a(O),G=i(31),B=a(G),X=i(32),L=a(X),H=i(33),N=a(H),F=i(34),J=a(F),R=i(35),j=a(R),Y=i(36),Q=a(Y),U=i(37),V=a(U),K=i(38),q=a(K),Z=i(39),$=a(Z),tt=i(40),et=a(tt),it=i(41),at=a(it),st=i(42),ht=a(st),dt=i(43),ot=a(dt),nt=i(44),lt=a(nt),rt=i(45),gt=a(rt),ct=i(46),mt=a(ct),ut=i(47),ft=a(ut),pt=i(48),bt=a(pt),yt=i(49),wt=a(yt),vt=i(50),xt=a(vt),_t=i(51),kt=a(_t),Tt=i(52),St=a(Tt),Ct=i(53),It=a(Ct),Pt=i(54),Et=a(Pt),Mt=i(55),Dt=a(Mt),zt=i(56),Wt=a(zt),Ot=i(57),At=a(Ot),Gt=i(58),Bt=a(Gt),Xt=i(59),Lt=a(Xt),Ht=i(60),Nt=a(Ht),Ft=i(61),Jt=a(Ft),Rt=i(62),jt=a(Rt),Yt=i(63),Qt=a(Yt),Ut=i(64),Vt=a(Ut),Kt=i(65),qt=a(Kt),Zt=i(66),$t=a(Zt),te=i(67),ee=a(te),ie=i(68),ae=a(ie),se=i(69),he=a(se),de=i(70),oe=a(de),ne=i(71),le=a(ne),re=i(72),ge=a(re),ce=i(73),me=a(ce),ue={init:function(){this.game.stage.backgroundColor="#000",this.mycloud=this.game.add.sprite(this.game.world.centerX,this.game.world.height/2,"mycloud"),this.mycloud.anchor.setTo(.5,.5),this.mycloud.spritescale=.5,this.mycloud.scale.setTo(this.mycloud.spritescale),this.mycloud.animations.add("run",[5,4,5,6,7,6],10,!0),this.mycloud.animations.play("run");var t=["每 到 夏 天 ， 除 了 颱 風 外 ， 對 流 旺 ","盛 也 常 帶 來 冰 雹 等 災 害 性 天 氣 ， ","現 在 你 有 機 會 拯 救 台 灣 不 受 冰 雹 ","侵 襲 ， 你 準 備 好 了 嗎 ？ _ "],e={};e.content=t,this.typewriter(.21*this.game.world.width,this.mycloud.y-2*this.mycloud.height,e)},preload:function(){var t=this.game.add.sprite(this.game.width/2-110,this.mycloud.y+this.mycloud.height/2,"preload");this.game.load.setPreloadSprite(t),this.game.load.image("dialogue",h.default),this.game.load.image("bg",o.default),this.game.load.image("longform_btn_click",l.default),this.game.load.image("longform_btn",g.default),this.game.load.image("startgame_btn_click",m.default),this.game.load.image("startgame_btn",f.default),this.game.load.image("title",b.default),this.game.load.image("btn_1_1",w.default),this.game.load.image("btn_1_1_click",x.default),this.game.load.image("btn_2_1",k.default),this.game.load.image("btn_2_1_click",S.default),this.game.load.image("btn_3_1",I.default),this.game.load.image("btn_3_1_click",E.default),this.game.load.spritesheet("alarmbanner",Jt.default,300,94),this.game.load.spritesheet("passedbanner",jt.default,300,94),this.game.load.image("firstbg",D.default),this.game.load.image("darksky1",W.default),this.game.load.image("blackcloud1",A.default),this.game.load.image("blackcloud2",B.default),this.game.load.image("bigcloud",L.default),this.game.load.spritesheet("hail",N.default,93,93),this.game.load.spritesheet("corn",J.default,240,189),this.game.load.image("redheart",j.default),this.game.load.image("blackheart",Q.default),this.game.load.image("ice1",V.default),this.game.load.image("ice2",q.default),this.game.load.image("ice3",$.default),this.game.load.image("cloud",et.default),this.game.load.image("icecloud",gt.default),this.game.load.image("bigcloud_anger1",at.default),this.game.load.image("bigcloud_anger2",ht.default),this.game.load.spritesheet("cow",ot.default,70,60),this.game.load.spritesheet("bighail",lt.default,557/3,187),this.game.load.image("wang",mt.default),this.game.load.image("secondbg",ft.default),this.game.load.spritesheet("people1",bt.default,240,196),this.game.load.spritesheet("people2",wt.default,240,196),this.game.load.spritesheet("people3",xt.default,240,196),this.game.load.image("darksky2",kt.default),this.game.load.image("thirdbg",St.default),this.game.load.spritesheet("car1",It.default,240,150),this.game.load.spritesheet("car2",Et.default,240,150),this.game.load.spritesheet("car3",Dt.default,240,150),this.game.load.spritesheet("car4",Wt.default,240,150),this.game.load.spritesheet("iceground",Bt.default,240,170),this.game.load.image("darksky3",At.default),this.game.load.image("police",Lt.default),this.game.load.image("alarmcloud",Nt.default),this.game.load.image("fail_bg",Qt.default),this.game.load.image("btn_share",Vt.default),this.game.load.spritesheet("failcloud",qt.default,510,460),this.game.load.image("fb",$t.default),this.game.load.audio("bgsound",ee.default),this.game.load.audio("buttonclick",ae.default),this.game.load.audio("passed",he.default),this.game.load.audio("catchhail",oe.default),this.game.load.audio("catchbighail",le.default),this.game.load.audio("fail",ge.default),this.game.load.audio("losshail",me.default),this.game.load.onFileComplete.add(function(t){})},create:function(){},update:function(){this.game.state.start("Start",!0,!1,"startpage")},typewriter:function(t,e,i){this.content=i.content,this.line=[],this.wordIndex=0,this.lineIndex=0,this.wordDelay=100,this.lineDelay=0,this.finished=!1;var a=i.style||{font:"16px Microsoft JhengHei",fill:"#fff"};this.text=this.game.add.text(t,e,"",a),this.nextLine()},nextLine:function(){if(this.lineIndex===this.content.length)return void this.game.time.events.add(2*Phaser.Timer.SECOND,function(){this.finished=!0},this);this.line=this.content[this.lineIndex].split(" "),this.wordIndex=0,this.game.time.events.repeat(this.wordDelay,this.line.length,this.nextWord,this),this.lineIndex++},nextWord:function(){this.text.text=this.text.text.concat(this.line[this.wordIndex]),++this.wordIndex===this.line.length&&(this.text.text=this.text.text.concat("\n"),this.game.time.events.add(this.lineDelay,this.nextLine,this))}};t.exports=ue},function(t,e,i){t.exports=i.p+"image/477bdfc746b6ebf74c15d743ef356f8f.png"},function(t,e,i){t.exports=i.p+"image/8acfc93fdbf97cabd8ff50d98cf2c770.jpg"},function(t,e,i){t.exports=i.p+"image/80ff2d08a47ab73700af4256b384423f.png"},function(t,e,i){t.exports=i.p+"image/efe42e1bf0851a292148c3c4c058d173.png"},function(t,e,i){t.exports=i.p+"image/32b44ebaad908e963b4b13d2487b0692.png"},function(t,e,i){t.exports=i.p+"image/fa17377be651a8507dcfc594b039592c.png"},function(t,e,i){t.exports=i.p+"image/92d3961850f918db6308e255f48d7507.png"},function(t,e,i){t.exports=i.p+"image/c3e2db495a61f31715b1431eedab9a22.png"},function(t,e,i){t.exports=i.p+"image/2dd86720c7791b1ed33a6fc3e447f80c.png"},function(t,e,i){t.exports=i.p+"image/98d56e11ed509f0f1169ac29715f59cc.png"},function(t,e,i){t.exports=i.p+"image/a005b67358273d2229cd40e6af77509c.png"},function(t,e,i){t.exports=i.p+"image/b7548773a9ad3a002a01fa000557b8a0.png"},function(t,e,i){t.exports=i.p+"image/cda0c9c3742a7b28ed5be5b955e28583.png"},function(t,e,i){t.exports=i.p+"image/32e811048ebfdec90502dcecd9936b81.jpg"},function(t,e,i){t.exports=i.p+"image/551ba1d984cae4c1c00500d6d223aeb9.png"},function(t,e,i){t.exports=i.p+"image/c511e3775ef5501d83e01951b7da2bdb.png"},function(t,e,i){t.exports=i.p+"image/943dd14a36d2fa331fd0a2b82deddd44.png"},function(t,e,i){t.exports=i.p+"image/8457c4ec8c7bbfd20206858b1e5848b8.png"},function(t,e,i){t.exports=i.p+"image/73fa7200f3778acadcf517b43d03f2bc.png"},function(t,e,i){t.exports=i.p+"image/13274755cb99d12a9984a2e1e25a2d1b.png"},function(t,e,i){t.exports=i.p+"image/d4e7167d0f06efd370f57d29ac790ed9.png"},function(t,e,i){t.exports=i.p+"image/953dc0d8aecec3d88267c9044f1eaeaa.png"},function(t,e,i){t.exports=i.p+"image/a82fba1fc88d46824ad6ed90e3f9d938.png"},function(t,e,i){t.exports=i.p+"image/75bade84d155869a72d3dba680ef2cff.png"},function(t,e,i){t.exports=i.p+"image/560786a92d43d945f644e4ed0aba95eb.png"},function(t,e,i){t.exports=i.p+"image/17acd07aed2ec72bf76f6a15d6c832c8.png"},function(t,e,i){t.exports=i.p+"image/1efbefbfb2613ab91d81aaefcdae5640.png"},function(t,e,i){t.exports=i.p+"image/1a9f6cd8080861d27f64036b9cbba5c3.png"},function(t,e,i){t.exports=i.p+"image/78408e16dfdc1f3c8621359d11995933.png"},function(t,e,i){t.exports=i.p+"image/116b00c9f89f06056506987573857745.png"},function(t,e,i){t.exports=i.p+"image/761c906a7bac93bd0cd51a03eafd1131.png"},function(t,e,i){t.exports=i.p+"image/be66e5214bd86cf09b89b4c09f3a769b.png"},function(t,e,i){t.exports=i.p+"image/0e1ad62d5221322e37c743c55ff2f5fc.jpg"},function(t,e,i){t.exports=i.p+"image/6691e9811516ed5c1fb5a1babf1aca16.png"},function(t,e,i){t.exports=i.p+"image/ec4aec8e9ad879782106eefcf8107e01.png"},function(t,e,i){t.exports=i.p+"image/6ba6c2276cf9af55588757bfff821958.png"},function(t,e,i){t.exports=i.p+"image/e6fd6ac91700050dbe1bec1ca1ace468.png"},function(t,e,i){t.exports=i.p+"image/32dbbd7b62ee91131ac6042e6b0ee43f.jpg"},function(t,e,i){t.exports=i.p+"image/286aa1f8713dacd55d7c25a8dd468fef.png"},function(t,e,i){t.exports=i.p+"image/1cb0c518f75972cfd7102a42ca3bf165.png"},function(t,e,i){t.exports=i.p+"image/f49ec65556484eb42dc67df70112621f.png"},function(t,e,i){t.exports=i.p+"image/0a3fa150a53904b5b4ef72509e03e9d3.png"},function(t,e,i){t.exports=i.p+"image/4166c8e2068e0b976a4f00c4588adf52.png"},function(t,e,i){t.exports=i.p+"image/b2960817f6d32efc3232314758fe4150.png"},function(t,e,i){t.exports=i.p+"image/ce6014dde4b0beb6941eaea040a6226c.png"},function(t,e,i){t.exports=i.p+"image/c0a61b91f0248b4f77dedb32be10bb7b.png"},function(t,e,i){t.exports=i.p+"image/2d1af39b247d1ada6c910142f37e0b19.png"},function(t,e,i){t.exports=i.p+"image/7d48bb2520fde7850d7aeee468a12e0a.png"},function(t,e,i){t.exports=i.p+"image/c376aaf0c54a0f4e712c71fb674603a9.jpg"},function(t,e,i){t.exports=i.p+"image/aaf9b25c43c5b9592ef0b0c341be44e2.png"},function(t,e,i){t.exports=i.p+"image/b67a8240d93755d9689ae7fd56e49d58.png"},function(t,e,i){t.exports=i.p+"image/fe4824fc34e984505b594380ff9e91c6.jpg"},function(t,e,i){t.exports=i.p+"media/dad83504109a6719341c7fffede9228d.mp3"},function(t,e,i){t.exports=i.p+"media/d6884f67f9f17931b4acea1bedd69c14.mp3"},function(t,e,i){t.exports=i.p+"media/9640767dc80e6934cc0c539d2d69f372.mp3"},function(t,e,i){t.exports=i.p+"media/87f9b4880fa2c2e4606b527fc3ceac60.mp3"},function(t,e,i){t.exports=i.p+"media/c996b650239bfb2bce5d23cb6e49d7ec.mp3"},function(t,e,i){t.exports=i.p+"media/10c242ecdb6a0566a328bd4be1015a3d.mp3"},function(t,e,i){t.exports=i.p+"media/129c5ed32f17f515525f6bf0304434d2.mp3"},function(t,e,i){"use strict";var a={init:function(t){this.beginning=t,this.game.scale.scaleMode=Phaser.ScaleManager.EXACT_FIT},create:function(){if("startpage"===this.beginning){this.bgsound=this.game.add.audio("bgsound",.2,!0),this.backgroundMusicControler("play");var t=this.game.add.image(0,0,"bg");t.width=this.game.world.width,t.height=this.game.world.height;var e=this.game.add.image(0,-100,"title");e.width=1.1*this.game.world.width,e.height=.6*this.game.world.height;this.game.add.tween(e).to({y:0},1e3,Phaser.Easing.Bounce.Out,!0).start(),this.btnGenerator("btn_1_1","開始遊戲",0,!1),this.btnGenerator("btn_2_1","觀看專題",1,!1)}else if("mycloudOS"===this.beginning){this.backgroundMusicControler("play"),this.game.stage.backgroundColor="#000",this.settingmycloud(this.game.world.centerX,this.game.world.centerY,.5,.5);var i=["我 來 自 雲 端 ， 看 不 慣 雲 朵 製 造 冰 ","雹 危 害 人 類 ， 要 拯 救 地 球 不 受 冰 ","雹 攻 擊 。 _"],a=this.settingDialogue(this.game.world.centerX,this.mycloud.y-1.2*this.mycloud.height);a.content=i,a.style={font:"16px Microsoft JhengHei",fill:"#000"},this.typewriter(a.img.x-.8*a.img.width/2,a.img.y-.8*a.img.height/2,a),this.btnGenerator("btn_3_1","直接開始",0,!1)}else if("intro1"===this.beginning){this.game.stage.backgroundColor="#fff",this.settingBigcloud(),this.settinghearts(["redheart","redheart","redheart"]),this.settingmask(),this.settingmycloud(.85*this.game.world.width,.6*this.game.world.height);var i=["在 時 間 內 使 用 手 指 拖 曳 移 動 雲 朵 ","防 止 冰 雹 落 下 _"],a=this.settingDialogue(this.game.world.centerX,this.mycloud.y-1.2*this.mycloud.height);a.content=i,a.style={font:"16px Microsoft JhengHei",fill:"#000"},this.typewriter(a.img.x-.8*a.img.width/2,a.img.y-.8*a.img.height/2,a),this.btnGenerator("btn_1_1","下一步",0,!1),this.btnGenerator("btn_3_1","直接開始",1,!1)}else if("intro2"===this.beginning){this.game.stage.backgroundColor="#fff",this.settingBigcloud(),this.settingmask(),this.settinghearts(["redheart","redheart","redheart"]),this.settingmycloud(.85*this.game.world.width,.6*this.game.world.height);var i=["若 冰 雹 打 中 目 標 物 ， 則 會 損 失 一 ","個 愛 心 ， 當 三 顆 愛 心 歸 零 則 遊 戲","結 束 。"],a=this.settingDialogue(this.game.world.centerX,this.mycloud.y-1.2*this.mycloud.height);a.content=i,a.style={font:"16px Microsoft JhengHei",fill:"#000"},this.typewriter(a.img.x-.8*a.img.width/2,a.img.y-.8*a.img.height/2,a);var s=this.game.add.tween(this.hearts).to({alpha:0},500,"Linear",!0);s.yoyo(!0,500),s.repeat(10,1e3),this.btnGenerator("btn_1_1","下一步",0,!1),this.btnGenerator("btn_3_1","直接開始",1,!1)}},settingDialogue:function(t,e,i){var a=this.game.add.image(t,e,"dialogue");a.width=.8*this.game.world.width,a.height=.2*this.game.world.height,a.anchor.setTo(.5,.5);var s={};return s.img=a,s.content=i,s.content&&this.mycloudSpeaking(s),s},settingmycloud:function(t,e,i,a){var s=t||this.game.world.centerX,h=e||.7*this.game.world.height,d=i||.5,o=a||.5;this.mycloud=this.game.add.sprite(s,h,"mycloud"),this.mycloud.anchor.setTo(d,o),this.mycloud.spritescale=.4,this.mycloud.scale.setTo(this.mycloud.spritescale),this.mycloud.animations.add("static",[0,1,0,2,0,1,0,3],10,!0),this.mycloud.animations.play("static")},settinghearts:function(t){var e=t[0],i=t[1],a=t[2],s=this.game.add.image(10,20,e),h=this.game.add.image(s.x+.6*s.width,20,i),d=this.game.add.image(h.x+.6*h.width,20,a);s.scale.setTo(.6),h.scale.setTo(.6),d.scale.setTo(.6),this.hearts=this.game.add.group(),this.hearts.add(d),this.hearts.add(h),this.hearts.add(s)},settingmask:function(){var t=this.game.make.bitmapData(this.game.world.width,this.game.world.height);t.addToWorld(),t.rect(0,0,this.game.world.width,this.game.world.height,"rgba(0,0,0,0.6)")},settingBigcloud:function(){this.bigcloud=this.game.add.image(this.game.world.centerX,10,"bigcloud"),this.bigcloud.anchor.setTo(.5,0);var t=this.game.cache.getImage("bigcloud");this.bigcloud.width=this.game.world.width,this.bigcloud.height=this.bigcloud.width/t.width*t.height,this.bigcloud_anger1=this.game.add.image(.7*this.bigcloud.width,.55*this.bigcloud.height,"bigcloud_anger1"),this.bigcloud_anger1.anchor.setTo(.5,.5),this.bigcloud_anger1.width=this.bigcloud.width/20,this.bigcloud_anger1.height=this.bigcloud.width/20,this.bigcloud_anger2=this.game.add.image(.15*this.bigcloud.width,.8*this.bigcloud.height,"bigcloud_anger2"),this.bigcloud_anger2.anchor.setTo(.5,.5),this.bigcloud_anger2.width=this.bigcloud.width/20,this.bigcloud_anger2.height=this.bigcloud.width/20},mycloudSpeaking:function(t){var e={font:"16px Microsoft JhengHei",fill:"#000",boundsAlignH:"center",boundsAlignV:"middle",wordWrap:!0,wordWrapWidth:.6*t.width};this.game.add.text(t.img.x,t.img.y,t.content,e).anchor.setTo(.5,.5)},btnGenerator:function(t,e,i,a){var s=this.game.world.centerX,h=.9*this.game.world.height,d=h-72,o=0==i?d:h,n=0==i?.2:.4,l=0==i?0:.3,r=a?t+"_click":t,g=this.game.add.button(s,o,r,function(){this.btnGenerator(r,e,i,!0)},this,1,1,0);g.anchor.setTo(.5,n),g.width=150,g.height=48;var c={font:"22px Microsoft JhengHei",fill:"#fff"};if(this.game.add.text(s,o,e,c).anchor.setTo(.5,l),a){var m=this.game.add.audio("buttonclick",.1,!1);try{m.play()}catch(t){}this.stateChanger(e)}},stateChanger:function(t){switch(t){case"開始遊戲":this.game.state.start("Start",!0,!1,"mycloudOS"),this.backgroundMusicControler("stop");break;case"觀看專題":this.bgsound.stop();break;case"遊戲說明":this.game.state.start("Start",!0,!1,"intro1");break;case"直接開始":this.game.state.start("Play",!0,!1,"level1","trial1-1"),this.backgroundMusicControler("stop");break;case"下一步":"intro1"===this.beginning?this.game.state.start("Play",!0,!1,"trial"):"intro2"===this.beginning&&this.game.state.start("Play",!0,!1,"trial2")}},typewriter:function(t,e,i){this.content=i.content,this.line=[],this.wordIndex=0,this.lineIndex=0,this.wordDelay=100,this.lineDelay=0,this.finished=!1;var a=i.style||{font:"16px Microsoft JhengHei",fill:"#fff"};this.text=this.game.add.text(t,e,"",a),this.nextLine()},nextLine:function(){if(this.lineIndex===this.content.length)return void this.game.time.events.add(2*Phaser.Timer.SECOND,function(){this.finished=!0},this);this.line=this.content[this.lineIndex].split(" "),this.wordIndex=0,this.game.time.events.repeat(this.wordDelay,this.line.length,this.nextWord,this),this.lineIndex++},nextWord:function(){this.text.text=this.text.text.concat(this.line[this.wordIndex]),++this.wordIndex===this.line.length&&(this.text.text=this.text.text.concat("\n"),this.game.time.events.add(this.lineDelay,this.nextLine,this))},backgroundMusicControler:function(t){if("play"===t)try{this.bgsound.play()}catch(t){}else if("stop"===t)try{this.bgsound.stop()}catch(t){}}};t.exports=a},function(t,e,i){"use strict";var a={init:function(){this.level=arguments[0],this.level_arg=arguments[1]||{},this.game.scale.scaleMode=Phaser.ScaleManager.EXACT_FIT},create:function(){this.bgsound=this.game.add.audio("bgsound",.2,!0),this.catchhailsound=this.game.add.audio("catchhail",.2,!1),this.catchbighailsound=this.game.add.audio("catchbighail",.2,!1),this.buttonclicksound=this.game.add.audio("buttonclick",.2,!1),this.passedsound=this.game.add.audio("passed",.2,!1),this.losssound=this.game.add.audio("losshail",.2,!1),this.failsound=this.game.add.audio("fail",.2,!1),this.game.sound.setDecodedCallback([this.bgsound,this.catchhailsound,this.catchbighailsound,this.buttonclicksound,this.passedsound,this.losssound],function(){this.backgroundMusicControler("play"),this.game.physics.startSystem(Phaser.Physics.ARCADE),this.scenesFactory(this.level,this.level_arg)},this)},update:function(){this.mycloud&&(this.game.physics.arcade.overlap(this.hails,this.mycloud,this.hitmyCloud,null,this),this.game.physics.arcade.overlap(this.hails,this.corns,this.hitCorn,null,this)),"level3"===this.level&&this.cars&&this.cars.forEachAlive(function(t){t.x>t.slide_x&&(2===this.mycloud.life?(t.frame=1,t.body.velocity.x=400):1===this.mycloud.life?(t.frame=1,t.body.velocity.x=600):0===this.mycloud.life&&(t.frame=1,t.body.velocity.x=800))},this),"play"!==this.level_arg&&this.typeFinished()},render:function(){},hitCorn:function(t,e){var i;t.kill(),"level1"===this.level?i=3:"level2"===this.level&&(i=2),3===e.life?(e.frame=1,this.corns.children.forEach(function(t){t.life--},this)):this.corns.children.forEach(function(t){t.frame<i&&t.frame++,t.life--},this);try{this.losssound.play()}catch(t){}this.mycloudLifeHandler(--this.mycloud.life),"trial2"===this.level&&this.game.time.events.add(1*Phaser.Timer.SECOND,function(){this.settingmask()},this)},hitmyCloud:function(t,e){if(e.kill(),this.hailCrushed(e.x,e.y,e.scale.x,e.size),"big"===e.size)try{this.catchbighailsound.play()}catch(t){}else try{this.catchhailsound.play()}catch(t){}var i=this.game.add.tween(t);i.to({tint:65280},200),i.onComplete.add(function(){t.tint=16777215},this),i.start(),"big"!==e.size||this.mycloud.isfreezing||this.hitbyBighail(e),"trial1-1"===this.level_arg&&(this.level_arg="trial1-2",this.tutorialMode())},hitbyBighail:function(t){this.mycloud.clickTimes=0,this.mycloud.body.velocity.x=0,this.mycloud.isfreezing=!0,this.mycloud.animations.play("frozen")},cornInitialize:function(){var t,e,i;"level1"===this.level?(t="corn",e="corn",i="corn"):"level2"===this.level?(t="people1",e="people2",i="people3"):"level3"===this.level&&(t="car1",e="car2",i="car3"),this.corns=this.game.add.group(),this.corns.enableBody=!0;var a=(this.game.cache.getImage("corn").width,.9275*this.game.height),s=1*this.game.width/6,h=1*this.game.width/2,d=5*this.game.width/6;this.left_corn=this.game.add.sprite(s,a,t),this.left_corn.frame=0,this.left_corn.scale.setTo(.5,0),this.left_corn.anchor.setTo(.5,1),this.left_corn.life=3,this.corns.add(this.left_corn),this.game.physics.arcade.enable(this.left_corn),this.middle_corn=this.game.add.sprite(h,a,e),this.middle_corn.frame=0,this.middle_corn.scale.setTo(.5,0),this.middle_corn.anchor.setTo(.5,1),this.middle_corn.life=3,this.corns.add(this.middle_corn),this.game.physics.arcade.enable(this.middle_corn),this.right_corn=this.game.add.sprite(d,a,i),this.right_corn.frame=0,this.right_corn.scale.setTo(.5,0),this.right_corn.anchor.setTo(.5,1),this.right_corn.life=3,this.corns.add(this.right_corn),this.game.physics.arcade.enable(this.right_corn);var o=this.game.add.tween(this.left_corn.scale);o.to({y:.5},1200,Phaser.Easing.Bounce.Out),o.start();var n=this.game.add.tween(this.middle_corn.scale);n.to({y:.5},1200,Phaser.Easing.Bounce.Out),n.start();var l=this.game.add.tween(this.right_corn.scale);l.to({y:.5},1200,Phaser.Easing.Bounce.Out),l.start()},carRunning:function(){this.cars=this.game.add.group(),this.cars.enableBody=!0;var t=(this.game.cache.getImage("car1").width,.5*this.game.cache.getImage("car1").height),e=["car1","car2","car3","car4"];this.game.time.events.loop(1*Phaser.Timer.SECOND,function(){var i=this.game.rnd.integerInRange(this.game.world.height-t,this.game.world.height),a=e[Math.floor(Math.random()*e.length)],s=this.cars.getFirstExists(!1,!0,0,i,a);s.anchor.setTo(.5,1),s.scale.setTo(.5),this.game.physics.arcade.enable(s),s.slide_x=this.game.rnd.integerInRange(0,this.game.world.width),s.body.velocity.x=200,s.outOfBoundsKill=!0,s.checkWorldBounds=!0},this)},settingMyCloud:function(t,e,i,a){var s=t||this.game.world.centerX,h=e||.65*this.game.world.height,d=i||.5,o=a||.5;this.mycloud=this.game.add.sprite(s,h,"mycloud"),this.mycloud.anchor.setTo(d,o),this.mycloud.life=3,this.mycloud.spritescale=.4,this.mycloud.scale.setTo(this.mycloud.spritescale);var n=this.game.cache.getImage("mycloud").width/10;this.mycloud.animations.add("run",[5,4,5,6,7,6],10,!0),this.mycloud.animations.add("static",[0,1,0,2,0,1,0,3],10,!0),this.mycloud.animations.add("frozen",[8,8,8,8,8,9,8],10,!0),this.mycloud.animations.play("static"),this.game.physics.arcade.enable(this.mycloud),this.mycloud.body.collideWorldBounds=!0,this.mycloud.body.setSize(.8*n,.8*n,.1*n,.1*n),this.mycloud.touching=!1,this.mycloud.inputEnabled=!0,this.mycloud.isfreezing=!1,this.onclickEmitter(this.mycloud),"trial2"!==this.level&&this.mycloudMove()},mycloudMove:function(){var t=this.mycloud.spritescale;this.mycloud.events.onInputDown.add(function(){this.mycloud.touching=!0},this),this.mycloud.events.onInputUp.add(function(){this.mycloud.touching=!1},this),this.game.input.onUp.add(function(){this.mycloud.isfreezing||(this.mycloud.body.velocity.x=0,this.mycloud.animations.play("static"))},this),this.game.device.desktop?this.game.input.addMoveCallback(function(e,i,a,s){this.mycloud.isfreezing||(i>this.mycloud.x?this.mycloud.scale.setTo("-"+t,t):this.mycloud.scale.setTo(t,t),this.mycloud.x=i,this.mycloud.animations.play("run"))},this):this.game.input.addMoveCallback(function(e,i,a,s){this.mycloud.isfreezing||(this.mycloud.touching?(this.mycloud.body.velocity.x=0,i>this.mycloud.x?this.mycloud.scale.setTo("-"+t,t):this.mycloud.scale.setTo(t,t),this.mycloud.x=i):i>this.mycloud.x+this.mycloud.width/2?(this.mycloud.scale.setTo("-"+t,t),this.mycloud.body.velocity.x=200):i<this.mycloud.x-this.mycloud.width/2?(this.mycloud.scale.setTo(t,t),this.mycloud.body.velocity.x=-200):this.mycloud.body.velocity.x=0,this.mycloud.animations.play("run"))},this)},scenesFactory:function(t,e){if("level1"===t){var i=this.game.add.image(0,0,"firstbg");i.width=this.game.world.width,i.height=this.game.world.height,this.cornInitialize();var a=this.game.add.sprite(.1*this.game.world.width,.75*this.game.world.height,"cow");a.scale.setTo(.6,.6),a.anchor.setTo(.5,.5);a.animations.add("cow").play(10,!0),"play"===e?this.staticScenes():(this.animatedScenes(),this.trialmask1=this.settingmask("rgba(0,0,0,0)"))}else if("level2"===t){var i=this.game.add.image(0,0,"secondbg");i.width=this.game.world.width,i.height=this.game.world.height,this.cornInitialize(),"play"===e?this.staticScenes():(this.animatedScenes(),this.trialmask1=this.settingmask("rgba(0,0,0,0)"))}else if("level3"===t){var i=this.game.add.image(0,0,"thirdbg");i.width=this.game.world.width,i.height=this.game.world.height,this.frozenroadInitialize(),this.carRunning(),this.animatedScenes()}else if("trial1"===t){var i=this.game.add.image(0,0,"firstbg");i.width=this.game.world.width,i.height=this.game.world.height,this.cornInitialize(),this.staticScenes(),this.heartmaker(["redheart","redheart","redheart"]);var a=this.game.add.sprite(.1*this.game.world.width,.75*this.game.world.height,"cow");a.scale.setTo(.6,.6),a.anchor.setTo(.5,.5),this.settingmask(),this.hails=this.game.add.group(),this.hails.enableBody=!0,this.hailcrushes=this.game.add.group(),this.settingMyCloud(.85*this.game.world.width,.6*this.game.world.height),this.game.time.events.add(1*Phaser.Timer.SECOND,this.hailing,this),this.game.time.events.loop(5*Phaser.Timer.SECOND,this.hailing,this)}else if("trial2"===t){this.game.stage.backgroundColor="#fff",this.staticScenes(),this.heartmaker(["redheart","redheart","redheart"]),this.settingmask(),this.hails=this.game.add.group(),this.hails.enableBody=!0,this.hailcrushes=this.game.add.group();var s=.85*this.game.world.width,h=.65*this.game.world.height;this.settingMyCloud(s,h),this.hailing("small",this.bigcloud.x),this.corns=this.game.add.group(),this.corns.enableBody=!0;var d=(this.game.cache.getImage("corn").width,this.game.world.centerX),o=.785*this.game.height,n=this.game.add.sprite(d,o,"corn");n.frame=0,n.scale.setTo(.5,.5),n.anchor.setTo(.5,0),n.life=3,this.corns.add(n),this.game.physics.arcade.enable(n)}},settinghails:function(){if(this.hails=this.game.add.group(),this.hails.enableBody=!0,this.hailcrushes=this.game.add.group(),"level1"===this.level)var t=1.3*Phaser.Timer.SECOND;else if("level2"===this.level)var t=1*Phaser.Timer.SECOND;else if("level3"===this.level)var t=.5*Phaser.Timer.SECOND;this.hailingTimer=this.game.time.create(!1),this.hailingTimer.loop(t,this.hailing,this)},animatedScenes:function(){if("level1"===this.level)var t="darksky1";else if("level2"===this.level)var t="darksky2";else if("level3"===this.level)var t="darksky3";var e=this.game.add.image(0,-100,t);e.width=this.game.world.width,e.height=.35*this.game.world.height;var i=this.game.add.image(-150,0,"blackcloud1"),a=this.game.cache.getImage("blackcloud1");i.width=.5*this.game.world.width,i.height=i.width/a.width*a.height;var s=this.game.add.image(300,0,"blackcloud2"),h=this.game.cache.getImage("blackcloud2");s.width=.65*this.game.world.width,s.height=s.width/h.width*h.height;var d=this.game.add.image(-30,this.game.world.height/2,"cloud"),o=this.game.cache.getImage("cloud");d.width=1.2*this.game.world.width,d.height=d.width/o.width*o.height,this.bigcloud=this.game.add.image(this.game.world.centerX,-200,"bigcloud"),this.bigcloud.anchor.setTo(.5,0);var n=this.game.cache.getImage("bigcloud");this.bigcloud.width=this.game.world.width,this.bigcloud.height=this.bigcloud.width/n.width*n.height,this.game.add.tween(e).to({y:0},1e3,Phaser.Easing.Bounce.In,!0).start(),this.game.add.tween(i).to({x:-50},500,Phaser.Easing.Linear.In,!0,1e3).start(),this.game.add.tween(s).to({x:200},500,Phaser.Easing.Linear.In,!0,1200).start(),this.bigcloud.Yposition=10;var l=this.game.add.tween(this.bigcloud).to({y:this.bigcloud.Yposition},700,Phaser.Easing.Sinusoidal.InOut,!0,1700);l.start(),l.onComplete.add(this.onStart,this)},staticScenes:function(){if("level1"===this.level)var t="darksky1";else if("level2"===this.level)var t="darksky2";else if("level3"===this.level)var t="darksky3";var e=this.game.add.image(0,0,t);e.width=this.game.world.width,e.height=.35*this.game.world.height;var i=this.game.add.image(-50,0,"blackcloud1"),a=this.game.cache.getImage("blackcloud1");i.width=.5*this.game.world.width,i.height=i.width/a.width*a.height;var s=this.game.add.image(200,0,"blackcloud2"),h=this.game.cache.getImage("blackcloud2");s.width=.65*this.game.world.width,s.height=s.width/h.width*h.height;var d=this.game.add.image(-30,this.game.world.height/2,"cloud"),o=this.game.cache.getImage("cloud");d.width=1.2*this.game.world.width,d.height=d.width/o.width*o.height,this.bigcloud=this.game.add.image(this.game.world.centerX,10,"bigcloud"),this.bigcloud.anchor.setTo(.5,0);var n=this.game.cache.getImage("bigcloud");this.bigcloud.width=this.game.world.width,this.bigcloud.height=this.bigcloud.width/n.width*n.height,this.bigcloud_anger1=this.game.add.image(.7*this.bigcloud.width,.55*this.bigcloud.height,"bigcloud_anger1"),this.bigcloud_anger1.anchor.setTo(.5,.5),this.bigcloud_anger1.width=this.bigcloud.width/20,this.bigcloud_anger1.height=this.bigcloud.width/20,this.bigcloud_anger2=this.game.add.image(.15*this.bigcloud.width,.8*this.bigcloud.height,"bigcloud_anger2"),this.bigcloud_anger2.anchor.setTo(.5,.5),this.bigcloud_anger2.width=this.bigcloud.width/20,this.bigcloud_anger2.height=this.bigcloud.width/20,this.onStart()},settingmask:function(t){var e=t||"rgba(0,0,0,0.6)",i=this.game.make.bitmapData(this.game.world.width,this.game.world.height);return i.addToWorld(),i.rect(0,0,this.game.world.width,this.game.world.height,e),i.dirty=!1,i},settingtaskWindow:function(){var t=this.game.add.group(),e=this.game.add.graphics(0,0);if(e.alignIn(e,Phaser.CENTER,.1*this.game.world.width,.15*this.game.world.height),e.beginFill(16777215),e.drawRoundedRect(0,0,.8*this.game.world.width,.7*this.game.world.height),e.endFill(),t.add(e),"level1"===this.level){var i="wang";if("trial1-1"===this.level_arg)var a="遊戲開始",s="正在玉米田裡忙碌的王爺爺，\n卻收到了冰雹警報，想起過去\n曾有冰雹造成農損的例子，若\n沒有及時阻止冰雹落下，他的\n心血就要泡湯了......";else if("play"===this.level_arg)var a="進入下一關",s="「謝謝你拯救了我的玉米田！\n希望你繼續幫助更多人！」"}else if("level2"===this.level){if("trial2-1"===this.level_arg)var i="people1",a="遊戲開始",s="離開了玉米田，雲朵人來到了\n繁華的台北市，路上車水馬龍\n，沒想到過了中午，晴朗的天\n氣開始變糟......";else if("play"===this.level_arg)var i="people1",a="進入下一關",s="「謝謝你保護了我們的生命安\n全！不過前面還有人也需要你\n幫忙......」";else if("alarm"===this.level_arg)var i="alarmcloud",a="沒問題",s="大量冰雹將快速落下！\n請注意！"}else if("level3"===this.level)if("alarm"===this.level_arg)var i="alarmcloud",a="沒問題",s="大量冰雹將快速落下！\n請注意！";else var i="police",a="遊戲開始",s="幫助台北市度過危機後，雲朵\n人來到了高速公路，氣象單位\n卻突然發布冰雹預警！若冰雹\n落在高速公路造成車輛打滑就\n不好了......";var h="play"===this.level_arg?"passedbanner":"alarmbanner",d=this.game.add.sprite(this.game.world.centerX,e.y,h);d.scale.setTo(.5),d.anchor.setTo(.5),d.animations.add(d).play(10,!0),t.add(d);var o=this.btnGenerator("btn_1_1",a,!1);this.unpausebtn=o,t.add(o),t.add(o.button_txt);var n=this.game.cache.getImage(i).height,l={font:"20px Microsoft JhengHei",fill:"#000",boundsAlignH:"center",boundsAlignV:"middle",wordWrap:!0,wordWrapWidth:.8*e.width};if("alarm"===this.level_arg){var r=this.game.add.image(this.game.world.centerX,o.y-.3*n,i);r.anchor.setTo(.5),r.scale.setTo(.5);var g=this.game.add.text(this.game.world.centerX,r.y-r.height/2,s,l);g.anchor.setTo(.5,1)}else{var r=this.game.add.image(this.game.world.centerX,o.y-.4*n,i);r.anchor.setTo(.5),r.scale.setTo(.5);var g=this.game.add.text(this.game.world.centerX,r.y-r.height/2,s,l);g.anchor.setTo(.5,1)}return t.add(g),t.add(r),t},onStart:function(){this.bigcloud_anger1=this.game.add.image(.7*this.bigcloud.width,.55*this.bigcloud.height,"bigcloud_anger1"),this.bigcloud_anger1.anchor.setTo(.5,.5),this.bigcloud_anger1.width=this.bigcloud.width/20,this.bigcloud_anger1.height=this.bigcloud.width/20,this.bigcloud_anger2=this.game.add.image(.15*this.bigcloud.width,.8*this.bigcloud.height,"bigcloud_anger2"),this.bigcloud_anger2.anchor.setTo(.5,.5),this.bigcloud_anger2.width=this.bigcloud.width/20,this.bigcloud_anger2.height=this.bigcloud.width/20,this.mycloudLifeHandler(3),this.passedTimer(),this.trialmask2=this.settingmask("rgba(0,0,0,0)"),this.settingMyCloud(),this.mycloudEmitter=this.emitterGenerator(),"play"===this.level_arg?this.onPlay():(this.game.paused=!0,this.mask=this.settingmask(),this.taskWindowGroup=this.settingtaskWindow(),this.taskWindowlistener=this.game.input.onDown.add(this.unpause,this,0,"taskWindow"))},unpause:function(t){var e=arguments[2],i=!1;if("taskWindow"!==e&&"passedWindow"!==e&&"alarmWindow"!==e||t.x>this.unpausebtn.x-this.unpausebtn.width/2&&t.x<this.unpausebtn.x+this.unpausebtn.width/2&&t.y>this.unpausebtn.y-this.unpausebtn.height/2&&t.y<this.unpausebtn.y+this.unpausebtn.height/2&&(i=!0),this.game.paused&&i){this.game.paused=!1;try{this.buttonclicksound.play()}catch(t){}this.mask.cls(),"taskWindow"===e?("level3"===this.level&&(this.level_arg="play"),this.taskWindowGroup.destroy(),this.game.input.onDown.removeAll(),this.onPlay()):"passedWindow"===e?(this.passedWindowGroup.destroy(),"level1"===this.level?(this.backgroundMusicControler("stop"),this.game.state.start("Play",!0,!1,"level2","trial2-1")):"level2"===this.level&&this.game.time.events.add(.5*Phaser.Timer.SECOND,function(){this.backgroundMusicControler("stop"),this.game.state.start("Play",!0,!1,"level3")},this)):"alarmWindow"===e&&(this.alarmWindowGroup.destroy(),this.game.input.onDown.removeAll(),this.hailingTimer.pause(),this.hailingAlarmPeriod.pause(),this.hailingStormTimer.paused?this.hailingStormTimer.resume():this.hailingStormTimer.start())}},passedTimer:function(){var t=5,e={font:"bold 22px Microsoft JhengHei",fill:"#ffffff",align:"left"},i=this.game.add.text(.55*this.game.world.width,this.heart3.y,"剩餘時間 : ",e);i.anchor.setTo(0,0);var a={font:"bold 50px Arial",fill:"#FFAA33",align:"center"},s=this.game.add.text(i.x+1.25*i.width,this.heart3.y,t,a);s.anchor.setTo(.5,.25),this.gameTimer=this.game.time.create(!1),this.gameTimer.loop(Phaser.Timer.SECOND,function(){if(0===t){try{this.passedsound.play()}catch(t){}"level3"!==this.level&&(this.game.paused=!0,this.mask=this.settingmask(),this.passedWindowGroup=this.settingtaskWindow(),this.game.input.onDown.add(this.unpause,this,0,"passedWindow"))}else s.setText(--t)},this),this.gameTimer.start()},onPlay:function(){this.settinghails(),"play"===this.level_arg?(this.hailingTimer.start(),"level2"!==this.level&&"level3"!==this.level||this.hailingAlarm()):this.tutorialMode()},tutorialMode:function(){var t=.85*this.game.world.width;if("trial1-1"===this.level_arg){var e=["在 時 間 內 使 用 手 指 拖 曳 移 動 雲 朵 ","防 止 冰 雹 落 下 _"];this.trialmask2.fill(0,0,0,.6)}else if("trial1-2"===this.level_arg){var e=["若 漏 接 ， 冰 雹 落 入 玉 米 田 ， 就 會 ","損 失 一 顆 愛 心 ， 愛 心 歸 零 = 挑 戰","失 敗 !"];this.trialmask2.cls(),this.trialmask1.fill(0,0,0,.6);var i=3;this.game.time.events.loop(.5*Phaser.Timer.SECOND,function(){if(3===i)var t=2;else if(2===i)var t=3;i=t,this.mycloudLifeHandler(t)},this,i)}else if("trial2-1"===this.level_arg){var e=["接 住 大 冰 雹 會 被 冰 凍 ， 請 連 續 點 ","擊 來 脫 困 ! _"];this.trialmask2.fill(0,0,0,.6)}this.playPaused(),this.game.add.tween(this.mycloud).to({x:t},500,Phaser.Easing.Linear.In,!0).onComplete.add(this.mycloudTrialDialogue,this,0,e)},hailingAlarm:function(){var t="level3"===this.level?.3*Phaser.Timer.SECOND:.5*Phaser.Timer.SECOND,e="level3"===this.level?10*Phaser.Timer.SECOND:15*Phaser.Timer.SECOND;this.hailingAlarmPeriod=this.game.time.create(!1),this.hailingStormTimer=this.game.time.create(!1),this.hailingStormTimer.loop(t,this.hailing,this),this.hailingAlarmPeriod.loop(e,function(){"level2"===this.level?(this.hailingTimer.pause(),this.hailingAlarmPeriod.pause(),this.hailingStormTimer.start()):"level3"===this.level&&(this.level_arg="alarm",this.game.paused=!0,this.mask=this.settingmask(),this.alarmWindowGroup=this.settingtaskWindow(),this.game.input.onDown.add(this.unpause,this,0,"alarmWindow"),this.game.time.events.add(5*Phaser.Timer.SECOND,function(){this.hailingStormTimer.pause(),this.hailingAlarmPeriod.resume(),this.hailingTimer.resume(),this.level_arg="play"},this))},this),this.hailingAlarmPeriod.start()},mycloudTrialDialogue:function(){var t=arguments[2],e=this.settingDialogue(this.game.world.centerX,this.mycloud.y-1.2*this.mycloud.height);if(e.content=t,e.style={font:"16px Microsoft JhengHei",fill:"#000"},this.typewriter(e.img.x-.8*e.img.width/2,e.img.y-.8*e.img.height/2,e),"trial1-2"===this.level_arg){this.game.input.enabled=!0;this.btnGenerator("btn_1_1","沒問題!",0,!1)}},playPaused:function(){this.mycloud.inputEnabled=!1,this.game.input.enabled=!1,this.gameTimer.pause(),this.hailingTimer.pause()},playResumed:function(){"trial1-2"!==this.level_arg&&(this.game.input.enabled=!0,this.mycloud.inputEnabled=!0)},heartmaker:function(t){var e=t[0],i=t[1],a=t[2];this.heart1=this.game.add.image(10,20,e),this.heart2=this.game.add.image(this.heart1.x+.6*this.heart1.width,20,i),this.heart3=this.game.add.image(this.heart2.x+.6*this.heart2.width,20,a),this.heart1.scale.setTo(.6),this.heart2.scale.setTo(.6),this.heart3.scale.setTo(.6)},btnGenerator:function(t,e,i){var a=this.game.world.centerX,s=.75*this.game.world.height,h=i?t+"_click":t,d=this.game.add.button(a,s,h,function(){this.btnGenerator(h,e,!0)},this,1,1,0);d.anchor.setTo(.5,.2),d.width=150,d.height=48;var o={font:"22px Microsoft JhengHei",fill:"#fff"};if(d.button_txt=this.game.add.text(a,s,e,o),d.button_txt.anchor.setTo(.5,0),i){try{this.buttonclicksound.play()}catch(t){}this.stateChanger(e)}return d},stateChanger:function(t){"trial1-2"===this.level_arg&&"沒問題!"===t&&(this.game.state.restart(!0,!1,this.level,"play"),this.backgroundMusicControler("stop"))},emitterGenerator:function(){var t=this.game.add.emitter(0,0,500);return t.makeParticles(["ice1","ice2","ice3"]),t.minParticleSpeed.set(-1e3,-500),t.maxParticleSpeed.set(1e3,500),t.gravity=0,t.setRotation(10,50),t.setScale(.5,.5,1,1,0,Phaser.Easing.Quintic.Out),t},onclickEmitter:function(t){this.clickEmitter=t.events.onInputDown.add(function(t){this.mycloud.isfreezing&&(this.mycloud.clickTimes++,this.mycloud.clickTimes>=5?(this.mycloud.clickTimes=0,this.mycloud.isfreezing=!1,this.mycloud.animations.play("static"),"trial2-1"===this.level_arg&&this.game.time.events.add(1*Phaser.Timer.SECOND,function(){this.game.state.restart(!0,!1,this.level,"play"),this.backgroundMusicControler("stop")},this)):(this.mycloudEmitter.x=t.x,this.mycloudEmitter.y=t.y,this.mycloudEmitter.start(!0,2e3,null,10),this.addQuake()))},this)},addQuake:function(){this.game.camera.shake(.01,500)},hailing:function(t,e){var i=this.game.cache.getImage("hail").width/3,a=(this.game.cache.getImage("bighail").width,e||this.game.rnd.integerInRange(0,this.game.width-i)),s=this.bigcloud.y+this.bigcloud.height;if("level1"===this.level)var h="hail";else if("trial2-1"===this.level_arg)var h="bighail";else var h=this.game.rnd.integerInRange(0,10)>7?"bighail":"hail";var d=this.hails.getFirstExists(!1,!0,a,s,h);d.scale.setTo(.5),this.game.physics.arcade.enable(d),d.body.setSize(.6*i,.6*i,.2*i,.3*i),d.body.velocity.y=300,d.size="bighail"===h?"big":"small",d.checkWorldBounds=!0,d.events.onOutOfBounds.add(function(){"level3"===this.level&&this.hitroad(d),d.destroy()},this)},frozenroadInitialize:function(){var t=[],e=this.game.height;this.frozenroad=[],this.frozenroads=this.add.group(),this.frozenroads.maxframe=1,t[0]=1*this.game.width/6,t[1]=1*this.game.width/2,t[2]=5*this.game.width/6;for(var i=0;i<3;i++)this.frozenroad[i]=this.game.add.sprite(t[i],e,"iceground"),this.frozenroad[i].frame=0,this.frozenroad[i].scale.setTo(.5,.5),this.frozenroad[i].anchor.setTo(.5,1),this.frozenroad[i].visible=!1,this.frozenroads.add(this.frozenroad[i])},hitroad:function(t){if(3===this.mycloud.life?t.x<=this.game.world.width/3?this.frozenroad[0].visible=!0:t.x>1*this.game.world.width/3&&t.x<=2*this.game.world.width/3?this.frozenroad[1].visible=!0:this.frozenroad[2].visible=!0:this.frozenroads.children.forEach(function(t){t.visible=!0,t.frame<this.frozenroads.maxframe&&t.frame++},this),this.mycloud.life>0){try{this.losssound.play()}catch(t){}this.mycloudLifeHandler(--this.mycloud.life)}},hailCrushed:function(t,e,i,a){var s="big"===a?"bighail":"hail",h=this.hailcrushes.getFirstExists(!1,!0,t,e,s);h.anchor.setTo(.5,.5),h.scale.setTo(i);var d=h.animations.add(s);d.play(60,!1,!1),d.onComplete.addOnce(function(){h.destroy()},this)},mycloudLifeHandler:function(t){if(t>0){for(var e=[],i=0;i<3;i++)e[i]=i<=t-1?"redheart":"blackheart";this.heartmaker(e)}else{this.backgroundMusicControler("stop");try{this.failsound.play()}catch(t){}this.game.state.start("Over",!0,!1,this.level)}},settingDialogue:function(t,e,i){var a=this.game.add.image(t,e,"dialogue");a.width=.8*this.game.world.width,a.height=.2*this.game.world.height,a.anchor.setTo(.5,.5);var s={};return s.img=a,s.content=i,s.content&&this.mycloudSpeaking(s),s},typewriter:function(t,e,i){this.content=i.content,this.line=[],this.wordIndex=0,this.lineIndex=0,this.wordDelay=100,this.lineDelay=0,this.typefinished=!1;var a=i.style||{font:"16px Microsoft JhengHei",fill:"#fff"};this.text=this.game.add.text(t,e,"",a),this.nextLine()},nextLine:function(){if(this.lineIndex===this.content.length)return void(this.typefinished=!0);this.line=this.content[this.lineIndex].split(" "),this.wordIndex=0,this.game.time.events.repeat(this.wordDelay,this.line.length,this.nextWord,this),this.lineIndex++},nextWord:function(){this.text.text=this.text.text.concat(this.line[this.wordIndex]),++this.wordIndex===this.line.length&&(this.text.text=this.text.text.concat("\n"),this.game.time.events.add(this.lineDelay,this.nextLine,this))},typeFinished:function(){this.typefinished&&(this.playResumed(),"play"!==this.level_arg&&this.hailingTimer.start(),this.typefinished=!1)},backgroundMusicControler:function(t){if("play"===t)try{this.bgsound.play()}catch(t){}else if("stop"===t)try{this.bgsound.stop()}catch(t){}else if("pause"===t)try{this.bgsound.pause()}catch(t){}else if("resume"===t)try{this.bgsound.resume()}catch(t){}}};t.exports=a},function(t,e,i){"use strict";var a={init:function(){this.level=arguments[0],this.game.scale.scaleMode=Phaser.ScaleManager.EXACT_FIT},create:function(){this.game.input.enabled=!0;var t=this.game.add.image(0,0,"fail_bg");t.width=this.game.world.width,t.height=this.game.world.height;var e=this.game.add.sprite(this.game.world.centerX,this.game.world.centerY,"failcloud");e.scale.setTo(.5),e.anchor.setTo(.5),e.animations.add("failcloud").play(5,!1,!1);var i={font:"22px Microsoft JhengHei",fill:"#ffff00"};this.game.add.text(this.game.world.centerX,e.y-e.height/2,"失敗~",i).anchor.setTo(.5),this.replaybutton=this.btnGenerator("btn_1_1","再試一次",1,!1),this.longformbutton=this.btnGenerator("btn_2_1","觀看專題",2,!1),this.sharebutton=this.btnGenerator("btn_share","分享出去吧!",0,!1)},btnGenerator:function(t,e,i,a){if(0===i)var s=.9*this.game.world.width,h=48,d=this.game.world.centerX,o=this.replaybutton.y-1.2*this.replaybutton.height,n=.5;else if(1===i)var s=.43*this.game.world.width,h=48,d=.25*this.game.world.width,o=.9*this.game.world.height,n=.45;else if(2===i)var s=.43*this.game.world.width,h=48,d=.75*this.game.world.width,o=.9*this.game.world.height,n=.55;var l=a?t+"_click":t,r=this.game.add.button(d,o,l,function(){this.btnGenerator(l,e,i,!0)},this,1,1,0);r.anchor.setTo(n,.2),r.width=s,r.height=h;var g={font:"22px Microsoft JhengHei",fill:"#fff"};return r.button_txt=this.game.add.text(d,o,e,g),r.button_txt.anchor.setTo(n,0),a&&this.stateChanger(e),r},stateChanger:function(t){switch(t){case"再試一次":this.game.state.start("Play",!0,!1,"level1","play");break;case"觀看專題":console.log("longform");break;case"分享出去吧!":console.log("share FB")}}};t.exports=a}],[1]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,