webpackJsonp([0],[,function(t,i,e){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}e(2),e(4);var s=e(6),h=a(s);e(9);var o=e(11),n=a(o),l=e(14),d=a(l),r=e(68),g=a(r),c=e(69),m=a(c),u=e(70),f=a(u),p=p||{};p.game=new h.default.Game("100%","100%",h.default.AUTO,"root"),p.BootState=n.default,p.LoadState=d.default,p.StartState=g.default,p.PlayState=m.default,p.OverState=f.default,p.game.state.add("Boot",p.BootState),p.game.state.add("Load",p.LoadState),p.game.state.add("Start",p.StartState),p.game.state.add("Play",p.PlayState),p.game.state.add("Over",p.OverState),p.game.state.start("Boot")},,,,,,,,function(t,i){},,function(t,i,e){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}var s=e(12),h=a(s),o=e(13),n=a(o),l={init:function(){this.game.stage.backgroundColor="#000",this.scale.scaleMode=Phaser.ScaleManager.SHOW_ALL,this.scale.pageAlignHorizontally=!0,this.scale.pageAlignVertically=!0},preload:function(){this.game.load.image("preload",h.default),this.game.load.spritesheet("mycloud",n.default,248,240)},create:function(){this.game.state.start("Load")}};t.exports=l},function(t,i,e){t.exports=e.p+"image/57ca1a2.gif"},function(t,i,e){t.exports=e.p+"image/d8c27ec.png"},function(t,i,e){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}var s=e(15),h=a(s),o=e(16),n=a(o),l=e(17),d=a(l),r=e(18),g=a(r),c=e(19),m=a(c),u=e(20),f=a(u),p=e(21),w=a(p),y=e(22),b=a(y),v=e(23),x=a(v),_=e(24),k=a(_),T=e(25),S=a(T),C=e(26),I=a(C),P=e(27),E=a(P),M=e(28),D=a(M),W=e(29),z=a(W),O=e(30),G=a(O),A=e(31),B=a(A),X=e(32),L=a(X),H=e(33),N=a(H),F=e(34),J=a(F),R=e(35),j=a(R),Y=e(36),Q=a(Y),U=e(37),V=a(U),K=e(38),q=a(K),Z=e(39),$=a(Z),tt=e(40),it=a(tt),et=e(41),at=a(et),st=e(42),ht=a(st),ot=e(43),nt=a(ot),lt=e(44),dt=a(lt),rt=e(45),gt=a(rt),ct=e(46),mt=a(ct),ut=e(47),ft=a(ut),pt=e(48),wt=a(pt),yt=e(49),bt=a(yt),vt=e(50),xt=a(vt),_t=e(51),kt=a(_t),Tt=e(52),St=a(Tt),Ct=e(53),It=a(Ct),Pt=e(54),Et=a(Pt),Mt=e(55),Dt=a(Mt),Wt=e(56),zt=a(Wt),Ot=e(57),Gt=a(Ot),At=e(58),Bt=a(At),Xt=e(59),Lt=a(Xt),Ht=e(60),Nt=a(Ht),Ft=e(61),Jt=a(Ft),Rt=e(62),jt=a(Rt),Yt=e(63),Qt=a(Yt),Ut=e(64),Vt=a(Ut),Kt=e(65),qt=a(Kt),Zt=e(66),$t=a(Zt),ti=e(67),ii=a(ti),ei={init:function(){this.game.stage.backgroundColor="#000",this.mycloud=this.game.add.sprite(this.game.world.centerX,this.game.world.height/2,"mycloud"),this.mycloud.anchor.setTo(.5,.5),this.mycloud.spritescale=.5,this.mycloud.scale.setTo(this.mycloud.spritescale),this.mycloud.animations.add("run",[5,4,5,6,7,6],10,!0),this.mycloud.animations.play("run");var t=["每 到 夏 天 ， 除 了 颱 風 外 ， 對 流 旺 ","盛 也 常 帶 來 冰 雹 等 災 害 性 天 氣 ， ","現 在 你 有 機 會 拯 救 台 灣 不 受 冰 雹 ","侵 襲 ， 你 準 備 好 了 嗎 ？ _ "],i={};i.content=t,this.typewriter(.21*this.game.world.width,this.mycloud.y-2*this.mycloud.height,i)},preload:function(){var t=this.game.add.sprite(this.game.width/2-110,this.mycloud.y+this.mycloud.height/2,"preload");this.game.load.setPreloadSprite(t),this.game.load.image("dialogue",h.default),this.game.load.image("bg",n.default),this.game.load.image("longform_btn_click",d.default),this.game.load.image("longform_btn",g.default),this.game.load.image("startgame_btn_click",m.default),this.game.load.image("startgame_btn",f.default),this.game.load.image("title",w.default),this.game.load.image("btn_1_1",b.default),this.game.load.image("btn_1_1_click",x.default),this.game.load.image("btn_2_1",k.default),this.game.load.image("btn_2_1_click",S.default),this.game.load.image("btn_3_1",I.default),this.game.load.image("btn_3_1_click",E.default),this.game.load.spritesheet("alarmbanner",Jt.default,300,94),this.game.load.spritesheet("passedbanner",jt.default,300,94),this.game.load.image("firstbg",D.default),this.game.load.image("darksky1",z.default),this.game.load.image("blackcloud1",G.default),this.game.load.image("blackcloud2",B.default),this.game.load.image("bigcloud",L.default),this.game.load.spritesheet("hail",N.default,93,93),this.game.load.spritesheet("corn",J.default,240,189),this.game.load.image("redheart",j.default),this.game.load.image("blackheart",Q.default),this.game.load.image("ice1",V.default),this.game.load.image("ice2",q.default),this.game.load.image("ice3",$.default),this.game.load.image("cloud",it.default),this.game.load.image("icecloud",gt.default),this.game.load.image("bigcloud_anger1",at.default),this.game.load.image("bigcloud_anger2",ht.default),this.game.load.spritesheet("cow",nt.default,70,60),this.game.load.spritesheet("bighail",dt.default,557/3,187),this.game.load.image("wang",mt.default),this.game.load.image("secondbg",ft.default),this.game.load.spritesheet("people1",wt.default,240,196),this.game.load.spritesheet("people2",bt.default,240,196),this.game.load.spritesheet("people3",xt.default,240,196),this.game.load.image("darksky2",kt.default),this.game.load.image("thirdbg",St.default),this.game.load.spritesheet("car1",It.default,240,150),this.game.load.spritesheet("car2",Et.default,240,150),this.game.load.spritesheet("car3",Dt.default,240,150),this.game.load.spritesheet("car4",zt.default,240,150),this.game.load.spritesheet("iceground",Bt.default,240,170),this.game.load.image("darksky3",Gt.default),this.game.load.image("police",Lt.default),this.game.load.image("alarmcloud",Nt.default),this.game.load.image("fail_bg",Qt.default),this.game.load.image("btn_share",Vt.default),this.game.load.spritesheet("failcloud",qt.default,510,460),this.game.load.image("fb",$t.default),this.game.load.audio("bgsound",ii.default),this.game.load.onFileComplete.add(function(t){})},create:function(){},update:function(){this.game.state.start("Start",!0,!1,"startpage")},typewriter:function(t,i,e){this.content=e.content,this.line=[],this.wordIndex=0,this.lineIndex=0,this.wordDelay=100,this.lineDelay=0,this.finished=!1;var a=e.style||{font:"16px Microsoft JhengHei",fill:"#fff"};this.text=this.game.add.text(t,i,"",a),this.nextLine()},nextLine:function(){if(this.lineIndex===this.content.length)return void this.game.time.events.add(2*Phaser.Timer.SECOND,function(){this.finished=!0},this);this.line=this.content[this.lineIndex].split(" "),this.wordIndex=0,this.game.time.events.repeat(this.wordDelay,this.line.length,this.nextWord,this),this.lineIndex++},nextWord:function(){this.text.text=this.text.text.concat(this.line[this.wordIndex]),++this.wordIndex===this.line.length&&(this.text.text=this.text.text.concat("\n"),this.game.time.events.add(this.lineDelay,this.nextLine,this))}};t.exports=ei},function(t,i,e){t.exports=e.p+"image/477bdfc.png"},function(t,i,e){t.exports=e.p+"image/8acfc93.jpg"},function(t,i,e){t.exports=e.p+"image/80ff2d0.png"},function(t,i,e){t.exports=e.p+"image/efe42e1.png"},function(t,i,e){t.exports=e.p+"image/32b44eb.png"},function(t,i,e){t.exports=e.p+"image/fa17377.png"},function(t,i,e){t.exports=e.p+"image/92d3961.png"},function(t,i,e){t.exports=e.p+"image/c3e2db4.png"},function(t,i,e){t.exports=e.p+"image/2dd8672.png"},function(t,i,e){t.exports=e.p+"image/98d56e1.png"},function(t,i,e){t.exports=e.p+"image/a005b67.png"},function(t,i,e){t.exports=e.p+"image/b754877.png"},function(t,i,e){t.exports=e.p+"image/cda0c9c.png"},function(t,i,e){t.exports=e.p+"image/32e8110.jpg"},function(t,i,e){t.exports=e.p+"image/551ba1d.png"},function(t,i,e){t.exports=e.p+"image/c511e37.png"},function(t,i,e){t.exports=e.p+"image/943dd14.png"},function(t,i,e){t.exports=e.p+"image/8457c4e.png"},function(t,i,e){t.exports=e.p+"image/73fa720.png"},function(t,i,e){t.exports=e.p+"image/1327475.png"},function(t,i,e){t.exports=e.p+"image/d4e7167.png"},function(t,i,e){t.exports=e.p+"image/953dc0d.png"},function(t,i,e){t.exports=e.p+"image/a82fba1.png"},function(t,i,e){t.exports=e.p+"image/75bade8.png"},function(t,i,e){t.exports=e.p+"image/560786a.png"},function(t,i,e){t.exports=e.p+"image/17acd07.png"},function(t,i,e){t.exports=e.p+"image/1efbefb.png"},function(t,i,e){t.exports=e.p+"image/1a9f6cd.png"},function(t,i,e){t.exports=e.p+"image/78408e1.png"},function(t,i,e){t.exports=e.p+"image/116b00c.png"},function(t,i,e){t.exports=e.p+"image/761c906.png"},function(t,i,e){t.exports=e.p+"image/be66e52.png"},function(t,i,e){t.exports=e.p+"image/0e1ad62.jpg"},function(t,i,e){t.exports=e.p+"image/6691e98.png"},function(t,i,e){t.exports=e.p+"image/ec4aec8.png"},function(t,i,e){t.exports=e.p+"image/6ba6c22.png"},function(t,i,e){t.exports=e.p+"image/e6fd6ac.png"},function(t,i,e){t.exports=e.p+"image/32dbbd7.jpg"},function(t,i,e){t.exports=e.p+"image/286aa1f.png"},function(t,i,e){t.exports=e.p+"image/1cb0c51.png"},function(t,i,e){t.exports=e.p+"image/f49ec65.png"},function(t,i,e){t.exports=e.p+"image/0a3fa15.png"},function(t,i,e){t.exports=e.p+"image/4166c8e.png"},function(t,i,e){t.exports=e.p+"image/b296081.png"},function(t,i,e){t.exports=e.p+"image/ce6014d.png"},function(t,i,e){t.exports=e.p+"image/c0a61b9.png"},function(t,i,e){t.exports=e.p+"image/2d1af39.png"},function(t,i,e){t.exports=e.p+"image/7d48bb2.png"},function(t,i,e){t.exports=e.p+"image/c376aaf.jpg"},function(t,i,e){t.exports=e.p+"image/aaf9b25.png"},function(t,i,e){t.exports=e.p+"image/b67a824.png"},function(t,i,e){t.exports=e.p+"image/fe4824f.jpg"},function(t,i,e){t.exports=e.p+"media/Mr_Turtle.dad8350.mp3"},function(t,i,e){"use strict";var a={init:function(t){this.beginning=t,this.game.scale.scaleMode=Phaser.ScaleManager.EXACT_FIT},create:function(){if("startpage"===this.beginning){this.bgsound=this.game.add.audio("bgsound",.2,!0),this.backgroundMusicControler("play");var t=this.game.add.image(0,0,"bg");t.width=this.game.world.width,t.height=this.game.world.height;var i=this.game.add.image(0,-100,"title");i.width=1.1*this.game.world.width,i.height=.6*this.game.world.height;this.game.add.tween(i).to({y:0},1e3,Phaser.Easing.Bounce.Out,!0).start(),this.btnGenerator("btn_1_1","開始遊戲",0,!1),this.btnGenerator("btn_2_1","觀看專題",1,!1)}else if("mycloudOS"===this.beginning){this.backgroundMusicControler("play"),this.game.stage.backgroundColor="#000",this.settingmycloud(this.game.world.centerX,this.game.world.centerY,.5,.5);var e=["我 來 自 雲 端 ， 看 不 慣 雲 朵 製 造 冰 ","雹 危 害 人 類 ， 要 拯 救 地 球 不 受 冰 ","雹 攻 擊 。 _"],a=this.settingDialogue(this.game.world.centerX,this.mycloud.y-1.2*this.mycloud.height);a.content=e,a.style={font:"16px Microsoft JhengHei",fill:"#000"},this.typewriter(a.img.x-.8*a.img.width/2,a.img.y-.8*a.img.height/2,a),this.btnGenerator("btn_3_1","直接開始",0,!1)}else if("intro1"===this.beginning){this.game.stage.backgroundColor="#fff",this.settingBigcloud(),this.settinghearts(["redheart","redheart","redheart"]),this.settingmask(),this.settingmycloud(.85*this.game.world.width,.6*this.game.world.height);var e=["在 時 間 內 使 用 手 指 拖 曳 移 動 雲 朵 ","防 止 冰 雹 落 下 _"],a=this.settingDialogue(this.game.world.centerX,this.mycloud.y-1.2*this.mycloud.height);a.content=e,a.style={font:"16px Microsoft JhengHei",fill:"#000"},this.typewriter(a.img.x-.8*a.img.width/2,a.img.y-.8*a.img.height/2,a),this.btnGenerator("btn_1_1","下一步",0,!1),this.btnGenerator("btn_3_1","直接開始",1,!1)}else if("intro2"===this.beginning){this.game.stage.backgroundColor="#fff",this.settingBigcloud(),this.settingmask(),this.settinghearts(["redheart","redheart","redheart"]),this.settingmycloud(.85*this.game.world.width,.6*this.game.world.height);var e=["若 冰 雹 打 中 目 標 物 ， 則 會 損 失 一 ","個 愛 心 ， 當 三 顆 愛 心 歸 零 則 遊 戲","結 束 。"],a=this.settingDialogue(this.game.world.centerX,this.mycloud.y-1.2*this.mycloud.height);a.content=e,a.style={font:"16px Microsoft JhengHei",fill:"#000"},this.typewriter(a.img.x-.8*a.img.width/2,a.img.y-.8*a.img.height/2,a);var s=this.game.add.tween(this.hearts).to({alpha:0},500,"Linear",!0);s.yoyo(!0,500),s.repeat(10,1e3),this.btnGenerator("btn_1_1","下一步",0,!1),this.btnGenerator("btn_3_1","直接開始",1,!1)}},settingDialogue:function(t,i,e){var a=this.game.add.image(t,i,"dialogue");a.width=.8*this.game.world.width,a.height=.2*this.game.world.height,a.anchor.setTo(.5,.5);var s={};return s.img=a,s.content=e,s.content&&this.mycloudSpeaking(s),s},settingmycloud:function(t,i,e,a){var s=t||this.game.world.centerX,h=i||.7*this.game.world.height,o=e||.5,n=a||.5;this.mycloud=this.game.add.sprite(s,h,"mycloud"),this.mycloud.anchor.setTo(o,n),this.mycloud.spritescale=.4,this.mycloud.scale.setTo(this.mycloud.spritescale),this.mycloud.animations.add("static",[0,1,0,2,0,1,0,3],10,!0),this.mycloud.animations.play("static")},settinghearts:function(t){var i=t[0],e=t[1],a=t[2],s=this.game.add.image(10,20,i),h=this.game.add.image(s.x+.6*s.width,20,e),o=this.game.add.image(h.x+.6*h.width,20,a);s.scale.setTo(.6),h.scale.setTo(.6),o.scale.setTo(.6),this.hearts=this.game.add.group(),this.hearts.add(o),this.hearts.add(h),this.hearts.add(s)},settingmask:function(){var t=this.game.make.bitmapData(this.game.world.width,this.game.world.height);t.addToWorld(),t.rect(0,0,this.game.world.width,this.game.world.height,"rgba(0,0,0,0.6)")},settingBigcloud:function(){this.bigcloud=this.game.add.image(this.game.world.centerX,10,"bigcloud"),this.bigcloud.anchor.setTo(.5,0);var t=this.game.cache.getImage("bigcloud");this.bigcloud.width=this.game.world.width,this.bigcloud.height=this.bigcloud.width/t.width*t.height,this.bigcloud_anger1=this.game.add.image(.7*this.bigcloud.width,.55*this.bigcloud.height,"bigcloud_anger1"),this.bigcloud_anger1.anchor.setTo(.5,.5),this.bigcloud_anger1.width=this.bigcloud.width/20,this.bigcloud_anger1.height=this.bigcloud.width/20,this.bigcloud_anger2=this.game.add.image(.15*this.bigcloud.width,.8*this.bigcloud.height,"bigcloud_anger2"),this.bigcloud_anger2.anchor.setTo(.5,.5),this.bigcloud_anger2.width=this.bigcloud.width/20,this.bigcloud_anger2.height=this.bigcloud.width/20},mycloudSpeaking:function(t){var i={font:"16px Microsoft JhengHei",fill:"#000",boundsAlignH:"center",boundsAlignV:"middle",wordWrap:!0,wordWrapWidth:.6*t.width};this.game.add.text(t.img.x,t.img.y,t.content,i).anchor.setTo(.5,.5)},btnGenerator:function(t,i,e,a){var s=this.game.world.centerX,h=.9*this.game.world.height,o=h-72,n=0==e?o:h,l=0==e?.2:.4,d=0==e?0:.3,r=a?t+"_click":t,g=this.game.add.button(s,n,r,function(){this.btnGenerator(r,i,e,!0)},this,1,1,0);g.anchor.setTo(.5,l),g.width=150,g.height=48;var c={font:"22px Microsoft JhengHei",fill:"#fff"};this.game.add.text(s,n,i,c).anchor.setTo(.5,d),a&&this.stateChanger(i)},stateChanger:function(t){switch(t){case"開始遊戲":this.game.state.start("Start",!0,!1,"mycloudOS"),this.backgroundMusicControler("stop");break;case"觀看專題":this.bgsound.stop();break;case"遊戲說明":this.game.state.start("Start",!0,!1,"intro1");break;case"直接開始":this.game.state.start("Play",!0,!1,"level1","trial1-1"),this.backgroundMusicControler("stop");break;case"下一步":"intro1"===this.beginning?this.game.state.start("Play",!0,!1,"trial"):"intro2"===this.beginning&&this.game.state.start("Play",!0,!1,"trial2")}},typewriter:function(t,i,e){this.content=e.content,this.line=[],this.wordIndex=0,this.lineIndex=0,this.wordDelay=100,this.lineDelay=0,this.finished=!1;var a=e.style||{font:"16px Microsoft JhengHei",fill:"#fff"};this.text=this.game.add.text(t,i,"",a),this.nextLine()},nextLine:function(){if(this.lineIndex===this.content.length)return void this.game.time.events.add(2*Phaser.Timer.SECOND,function(){this.finished=!0},this);this.line=this.content[this.lineIndex].split(" "),this.wordIndex=0,this.game.time.events.repeat(this.wordDelay,this.line.length,this.nextWord,this),this.lineIndex++},nextWord:function(){this.text.text=this.text.text.concat(this.line[this.wordIndex]),++this.wordIndex===this.line.length&&(this.text.text=this.text.text.concat("\n"),this.game.time.events.add(this.lineDelay,this.nextLine,this))},backgroundMusicControler:function(t){if("play"===t)try{this.bgsound.play()}catch(t){}else if("stop"===t)try{this.bgsound.stop()}catch(t){}}};t.exports=a},function(t,i,e){"use strict";var a={init:function(){this.level=arguments[0],this.level_arg=arguments[1]||{},this.game.scale.scaleMode=Phaser.ScaleManager.EXACT_FIT},create:function(){this.bgsound=this.game.add.audio("bgsound",.2,!0),this.backgroundMusicControler("play"),this.game.physics.startSystem(Phaser.Physics.ARCADE),this.scenesFactory(this.level,this.level_arg)},update:function(){this.mycloud&&(this.game.physics.arcade.overlap(this.hails,this.mycloud,this.hitmyCloud,null,this),this.game.physics.arcade.overlap(this.hails,this.corns,this.hitCorn,null,this)),"level3"===this.level&&this.cars&&this.cars.forEachAlive(function(t){t.x>t.slide_x&&(2===this.mycloud.life?(t.frame=1,t.body.velocity.x=400):1===this.mycloud.life?(t.frame=1,t.body.velocity.x=600):0===this.mycloud.life&&(t.frame=1,t.body.velocity.x=800))},this),"play"!==this.level_arg&&this.typeFinished()},render:function(){},hitCorn:function(t,i){var e;t.kill(),"level1"===this.level?e=3:"level2"===this.level&&(e=2),3===i.life?(i.frame=1,this.corns.children.forEach(function(t){t.life--},this)):this.corns.children.forEach(function(t){t.frame<e&&t.frame++,t.life--},this),this.mycloudLifeHandler(--this.mycloud.life),"trial2"===this.level&&this.game.time.events.add(1*Phaser.Timer.SECOND,function(){this.settingmask()},this)},hitmyCloud:function(t,i){i.kill(),this.hailCrushed(i.x,i.y,i.scale.x,i.size);var e=this.game.add.tween(t);e.to({tint:65280},200),e.onComplete.add(function(){t.tint=16777215},this),e.start(),"big"!==i.size||this.mycloud.isfreezing||this.hitbyBighail(i),"trial1-1"===this.level_arg&&(this.level_arg="trial1-2",this.tutorialMode())},hitbyBighail:function(t){this.mycloud.clickTimes=0,this.mycloud.body.velocity.x=0,this.mycloud.isfreezing=!0,this.mycloud.animations.play("frozen")},cornInitialize:function(){var t,i,e;"level1"===this.level?(t="corn",i="corn",e="corn"):"level2"===this.level?(t="people1",i="people2",e="people3"):"level3"===this.level&&(t="car1",i="car2",e="car3"),this.corns=this.game.add.group(),this.corns.enableBody=!0;var a=(this.game.cache.getImage("corn").width,.9275*this.game.height),s=1*this.game.width/6,h=1*this.game.width/2,o=5*this.game.width/6;this.left_corn=this.game.add.sprite(s,a,t),this.left_corn.frame=0,this.left_corn.scale.setTo(.5,0),this.left_corn.anchor.setTo(.5,1),this.left_corn.life=3,this.corns.add(this.left_corn),this.game.physics.arcade.enable(this.left_corn),this.middle_corn=this.game.add.sprite(h,a,i),this.middle_corn.frame=0,this.middle_corn.scale.setTo(.5,0),this.middle_corn.anchor.setTo(.5,1),this.middle_corn.life=3,this.corns.add(this.middle_corn),this.game.physics.arcade.enable(this.middle_corn),this.right_corn=this.game.add.sprite(o,a,e),this.right_corn.frame=0,this.right_corn.scale.setTo(.5,0),this.right_corn.anchor.setTo(.5,1),this.right_corn.life=3,this.corns.add(this.right_corn),this.game.physics.arcade.enable(this.right_corn);var n=this.game.add.tween(this.left_corn.scale);n.to({y:.5},1200,Phaser.Easing.Bounce.Out),n.start();var l=this.game.add.tween(this.middle_corn.scale);l.to({y:.5},1200,Phaser.Easing.Bounce.Out),l.start();var d=this.game.add.tween(this.right_corn.scale);d.to({y:.5},1200,Phaser.Easing.Bounce.Out),d.start()},carRunning:function(){this.cars=this.game.add.group(),this.cars.enableBody=!0;var t=(this.game.cache.getImage("car1").width,.5*this.game.cache.getImage("car1").height),i=["car1","car2","car3","car4"];this.game.time.events.loop(1*Phaser.Timer.SECOND,function(){var e=this.game.rnd.integerInRange(this.game.world.height-t,this.game.world.height),a=i[Math.floor(Math.random()*i.length)],s=this.cars.getFirstExists(!1,!0,0,e,a);s.anchor.setTo(.5,1),s.scale.setTo(.5),this.game.physics.arcade.enable(s),s.slide_x=this.game.rnd.integerInRange(0,this.game.world.width),s.body.velocity.x=200,s.outOfBoundsKill=!0,s.checkWorldBounds=!0},this)},settingMyCloud:function(t,i,e,a){var s=t||this.game.world.centerX,h=i||.65*this.game.world.height,o=e||.5,n=a||.5;this.mycloud=this.game.add.sprite(s,h,"mycloud"),this.mycloud.anchor.setTo(o,n),this.mycloud.life=3,this.mycloud.spritescale=.4,this.mycloud.scale.setTo(this.mycloud.spritescale);var l=this.game.cache.getImage("mycloud").width/10;this.mycloud.animations.add("run",[5,4,5,6,7,6],10,!0),this.mycloud.animations.add("static",[0,1,0,2,0,1,0,3],10,!0),this.mycloud.animations.add("frozen",[8,8,8,8,8,9,8],10,!0),this.mycloud.animations.play("static"),this.game.physics.arcade.enable(this.mycloud),this.mycloud.body.collideWorldBounds=!0,this.mycloud.body.setSize(.8*l,.8*l,.1*l,.1*l),this.mycloud.touching=!1,this.mycloud.inputEnabled=!0,this.mycloud.isfreezing=!1,this.onclickEmitter(this.mycloud),"trial2"!==this.level&&this.mycloudMove()},mycloudMove:function(){var t=this.mycloud.spritescale;this.mycloud.events.onInputDown.add(function(){this.mycloud.touching=!0},this),this.mycloud.events.onInputUp.add(function(){this.mycloud.touching=!1},this),this.game.input.onUp.add(function(){this.mycloud.isfreezing||(this.mycloud.body.velocity.x=0,this.mycloud.animations.play("static"))},this),this.game.device.desktop?this.game.input.addMoveCallback(function(i,e,a,s){this.mycloud.isfreezing||(e>this.mycloud.x?this.mycloud.scale.setTo("-"+t,t):this.mycloud.scale.setTo(t,t),this.mycloud.x=e,this.mycloud.animations.play("run"))},this):this.game.input.addMoveCallback(function(i,e,a,s){this.mycloud.isfreezing||(this.mycloud.touching?(this.mycloud.body.velocity.x=0,e>this.mycloud.x?this.mycloud.scale.setTo("-"+t,t):this.mycloud.scale.setTo(t,t),this.mycloud.x=e):e>this.mycloud.x+this.mycloud.width/2?(this.mycloud.scale.setTo("-"+t,t),this.mycloud.body.velocity.x=200):e<this.mycloud.x-this.mycloud.width/2?(this.mycloud.scale.setTo(t,t),this.mycloud.body.velocity.x=-200):this.mycloud.body.velocity.x=0,this.mycloud.animations.play("run"))},this)},scenesFactory:function(t,i){if("level1"===t){var e=this.game.add.image(0,0,"firstbg");e.width=this.game.world.width,e.height=this.game.world.height,this.cornInitialize();var a=this.game.add.sprite(.1*this.game.world.width,.75*this.game.world.height,"cow");a.scale.setTo(.6,.6),a.anchor.setTo(.5,.5);a.animations.add("cow").play(10,!0),"play"===i?this.staticScenes():(this.animatedScenes(),this.trialmask1=this.settingmask("rgba(0,0,0,0)"))}else if("level2"===t){var e=this.game.add.image(0,0,"secondbg");e.width=this.game.world.width,e.height=this.game.world.height,this.cornInitialize(),"play"===i?this.staticScenes():(this.animatedScenes(),this.trialmask1=this.settingmask("rgba(0,0,0,0)"))}else if("level3"===t){var e=this.game.add.image(0,0,"thirdbg");e.width=this.game.world.width,e.height=this.game.world.height,this.frozenroadInitialize(),this.carRunning(),this.animatedScenes()}else if("trial1"===t){var e=this.game.add.image(0,0,"firstbg");e.width=this.game.world.width,e.height=this.game.world.height,this.cornInitialize(),this.staticScenes(),this.heartmaker(["redheart","redheart","redheart"]);var a=this.game.add.sprite(.1*this.game.world.width,.75*this.game.world.height,"cow");a.scale.setTo(.6,.6),a.anchor.setTo(.5,.5),this.settingmask(),this.hails=this.game.add.group(),this.hails.enableBody=!0,this.hailcrushes=this.game.add.group(),this.settingMyCloud(.85*this.game.world.width,.6*this.game.world.height),this.game.time.events.add(1*Phaser.Timer.SECOND,this.hailing,this),this.game.time.events.loop(5*Phaser.Timer.SECOND,this.hailing,this)}else if("trial2"===t){this.game.stage.backgroundColor="#fff",this.staticScenes(),this.heartmaker(["redheart","redheart","redheart"]),this.settingmask(),this.hails=this.game.add.group(),this.hails.enableBody=!0,this.hailcrushes=this.game.add.group();var s=.85*this.game.world.width,h=.65*this.game.world.height;this.settingMyCloud(s,h),this.hailing("small",this.bigcloud.x),this.corns=this.game.add.group(),this.corns.enableBody=!0;var o=(this.game.cache.getImage("corn").width,this.game.world.centerX),n=.785*this.game.height,l=this.game.add.sprite(o,n,"corn");l.frame=0,l.scale.setTo(.5,.5),l.anchor.setTo(.5,0),l.life=3,this.corns.add(l),this.game.physics.arcade.enable(l)}},settinghails:function(){if(this.hails=this.game.add.group(),this.hails.enableBody=!0,this.hailcrushes=this.game.add.group(),"level1"===this.level)var t=1.3*Phaser.Timer.SECOND;else if("level2"===this.level)var t=1*Phaser.Timer.SECOND;else if("level3"===this.level)var t=.5*Phaser.Timer.SECOND;this.hailingTimer=this.game.time.create(!1),this.hailingTimer.loop(t,this.hailing,this)},animatedScenes:function(){if("level1"===this.level)var t="darksky1";else if("level2"===this.level)var t="darksky2";else if("level3"===this.level)var t="darksky3";var i=this.game.add.image(0,-100,t);i.width=this.game.world.width,i.height=.35*this.game.world.height;var e=this.game.add.image(-150,0,"blackcloud1"),a=this.game.cache.getImage("blackcloud1");e.width=.5*this.game.world.width,e.height=e.width/a.width*a.height;var s=this.game.add.image(300,0,"blackcloud2"),h=this.game.cache.getImage("blackcloud2");s.width=.65*this.game.world.width,s.height=s.width/h.width*h.height;var o=this.game.add.image(-30,this.game.world.height/2,"cloud"),n=this.game.cache.getImage("cloud");o.width=1.2*this.game.world.width,o.height=o.width/n.width*n.height,this.bigcloud=this.game.add.image(this.game.world.centerX,-200,"bigcloud"),this.bigcloud.anchor.setTo(.5,0);var l=this.game.cache.getImage("bigcloud");this.bigcloud.width=this.game.world.width,this.bigcloud.height=this.bigcloud.width/l.width*l.height,this.game.add.tween(i).to({y:0},1e3,Phaser.Easing.Bounce.In,!0).start(),this.game.add.tween(e).to({x:-50},500,Phaser.Easing.Linear.In,!0,1e3).start(),this.game.add.tween(s).to({x:200},500,Phaser.Easing.Linear.In,!0,1200).start(),this.bigcloud.Yposition=10;var d=this.game.add.tween(this.bigcloud).to({y:this.bigcloud.Yposition},700,Phaser.Easing.Sinusoidal.InOut,!0,1700);d.start(),d.onComplete.add(this.onStart,this)},staticScenes:function(){if("level1"===this.level)var t="darksky1";else if("level2"===this.level)var t="darksky2";else if("level3"===this.level)var t="darksky3";var i=this.game.add.image(0,0,t);i.width=this.game.world.width,i.height=.35*this.game.world.height;var e=this.game.add.image(-50,0,"blackcloud1"),a=this.game.cache.getImage("blackcloud1");e.width=.5*this.game.world.width,e.height=e.width/a.width*a.height;var s=this.game.add.image(200,0,"blackcloud2"),h=this.game.cache.getImage("blackcloud2");s.width=.65*this.game.world.width,s.height=s.width/h.width*h.height;var o=this.game.add.image(-30,this.game.world.height/2,"cloud"),n=this.game.cache.getImage("cloud");o.width=1.2*this.game.world.width,o.height=o.width/n.width*n.height,this.bigcloud=this.game.add.image(this.game.world.centerX,10,"bigcloud"),this.bigcloud.anchor.setTo(.5,0);var l=this.game.cache.getImage("bigcloud");this.bigcloud.width=this.game.world.width,this.bigcloud.height=this.bigcloud.width/l.width*l.height,this.bigcloud_anger1=this.game.add.image(.7*this.bigcloud.width,.55*this.bigcloud.height,"bigcloud_anger1"),this.bigcloud_anger1.anchor.setTo(.5,.5),this.bigcloud_anger1.width=this.bigcloud.width/20,this.bigcloud_anger1.height=this.bigcloud.width/20,this.bigcloud_anger2=this.game.add.image(.15*this.bigcloud.width,.8*this.bigcloud.height,"bigcloud_anger2"),this.bigcloud_anger2.anchor.setTo(.5,.5),this.bigcloud_anger2.width=this.bigcloud.width/20,this.bigcloud_anger2.height=this.bigcloud.width/20,this.onStart()},settingmask:function(t){var i=t||"rgba(0,0,0,0.6)",e=this.game.make.bitmapData(this.game.world.width,this.game.world.height);return e.addToWorld(),e.rect(0,0,this.game.world.width,this.game.world.height,i),e.dirty=!1,e},settingtaskWindow:function(){var t=this.game.add.group(),i=this.game.add.graphics(0,0);if(i.alignIn(i,Phaser.CENTER,.1*this.game.world.width,.15*this.game.world.height),i.beginFill(16777215),i.drawRoundedRect(0,0,.8*this.game.world.width,.7*this.game.world.height),i.endFill(),t.add(i),"level1"===this.level){var e="wang";if("trial1-1"===this.level_arg)var a="遊戲開始",s="正在玉米田裡忙碌的王爺爺，\n卻收到了冰雹警報，想起過去\n曾有冰雹造成農損的例子，若\n沒有及時阻止冰雹落下，他的\n心血就要泡湯了......";else if("play"===this.level_arg)var a="進入下一關",s="「謝謝你拯救了我的玉米田！\n希望你繼續幫助更多人！」"}else if("level2"===this.level){if("trial2-1"===this.level_arg)var e="people1",a="遊戲開始",s="離開了玉米田，雲朵人來到了\n繁華的台北市，路上車水馬龍\n，沒想到過了中午，晴朗的天\n氣開始變糟......";else if("play"===this.level_arg)var e="people1",a="進入下一關",s="「謝謝你保護了我們的生命安\n全！不過前面還有人也需要你\n幫忙......」";else if("alarm"===this.level_arg)var e="alarmcloud",a="沒問題",s="大量冰雹將快速落下！\n請注意！"}else if("level3"===this.level)if("alarm"===this.level_arg)var e="alarmcloud",a="沒問題",s="大量冰雹將快速落下！\n請注意！";else var e="police",a="遊戲開始",s="幫助台北市度過危機後，雲朵\n人來到了高速公路，氣象單位\n卻突然發布冰雹預警！若冰雹\n落在高速公路造成車輛打滑就\n不好了......";var h="play"===this.level_arg?"passedbanner":"alarmbanner",o=this.game.add.sprite(this.game.world.centerX,i.y,h);o.scale.setTo(.5),o.anchor.setTo(.5),o.animations.add(o).play(10,!0),t.add(o);var n=this.btnGenerator("btn_1_1",a,!1);this.unpausebtn=n,t.add(n),t.add(n.button_txt);var l=this.game.cache.getImage(e).height,d={font:"20px Microsoft JhengHei",fill:"#000",boundsAlignH:"center",boundsAlignV:"middle",wordWrap:!0,wordWrapWidth:.8*i.width};if("alarm"===this.level_arg){var r=this.game.add.image(this.game.world.centerX,n.y-.3*l,e);r.anchor.setTo(.5),r.scale.setTo(.5);var g=this.game.add.text(this.game.world.centerX,r.y-r.height/2,s,d);g.anchor.setTo(.5,1)}else{var r=this.game.add.image(this.game.world.centerX,n.y-.4*l,e);r.anchor.setTo(.5),r.scale.setTo(.5);var g=this.game.add.text(this.game.world.centerX,r.y-r.height/2,s,d);g.anchor.setTo(.5,1)}return t.add(g),t.add(r),t},onStart:function(){this.bigcloud_anger1=this.game.add.image(.7*this.bigcloud.width,.55*this.bigcloud.height,"bigcloud_anger1"),this.bigcloud_anger1.anchor.setTo(.5,.5),this.bigcloud_anger1.width=this.bigcloud.width/20,this.bigcloud_anger1.height=this.bigcloud.width/20,this.bigcloud_anger2=this.game.add.image(.15*this.bigcloud.width,.8*this.bigcloud.height,"bigcloud_anger2"),this.bigcloud_anger2.anchor.setTo(.5,.5),this.bigcloud_anger2.width=this.bigcloud.width/20,this.bigcloud_anger2.height=this.bigcloud.width/20,this.mycloudLifeHandler(3),this.passedTimer(),this.trialmask2=this.settingmask("rgba(0,0,0,0)"),this.settingMyCloud(),this.mycloudEmitter=this.emitterGenerator(),"play"===this.level_arg?this.onPlay():(this.game.paused=!0,this.mask=this.settingmask(),this.taskWindowGroup=this.settingtaskWindow(),this.taskWindowlistener=this.game.input.onDown.add(this.unpause,this,0,"taskWindow"))},unpause:function(t){var i=arguments[2],e=!1;"taskWindow"!==i&&"passedWindow"!==i&&"alarmWindow"!==i||t.x>this.unpausebtn.x-this.unpausebtn.width/2&&t.x<this.unpausebtn.x+this.unpausebtn.width/2&&t.y>this.unpausebtn.y-this.unpausebtn.height/2&&t.y<this.unpausebtn.y+this.unpausebtn.height/2&&(e=!0),this.game.paused&&e&&(this.game.paused=!1,this.mask.cls(),"taskWindow"===i?("level3"===this.level&&(this.level_arg="play"),this.taskWindowGroup.destroy(),this.game.input.onDown.removeAll(),this.onPlay()):"passedWindow"===i?(this.passedWindowGroup.destroy(),"level1"===this.level?(this.game.state.start("Play",!0,!1,"level2","trial2-1"),this.backgroundMusicControler("stop")):"level2"===this.level&&this.game.time.events.add(.5*Phaser.Timer.SECOND,function(){this.game.state.start("Play",!0,!1,"level3"),this.backgroundMusicControler("stop")},this)):"alarmWindow"===i&&(this.alarmWindowGroup.destroy(),this.game.input.onDown.removeAll(),this.hailingTimer.pause(),this.hailingAlarmPeriod.pause(),this.hailingStormTimer.paused?this.hailingStormTimer.resume():this.hailingStormTimer.start()))},passedTimer:function(){var t=30,i={font:"bold 22px Microsoft JhengHei",fill:"#ffffff",align:"left"},e=this.game.add.text(.55*this.game.world.width,this.heart3.y,"剩餘時間 : ",i);e.anchor.setTo(0,0);var a={font:"bold 50px Arial",fill:"#FFAA33",align:"center"},s=this.game.add.text(e.x+1.25*e.width,this.heart3.y,t,a);s.anchor.setTo(.5,.25),this.gameTimer=this.game.time.create(!1),this.gameTimer.loop(Phaser.Timer.SECOND,function(){0===t?"level1"===this.level?(this.game.paused=!0,this.mask=this.settingmask(),this.passedWindowGroup=this.settingtaskWindow(),this.game.input.onDown.add(this.unpause,this,0,"passedWindow")):"level2"===this.level?(this.game.paused=!0,this.mask=this.settingmask(),this.passedWindowGroup=this.settingtaskWindow(),this.game.input.onDown.add(this.unpause,this,0,"passedWindow")):this.level:s.setText(--t)},this),this.gameTimer.start()},onPlay:function(){this.settinghails(),"play"===this.level_arg?(this.hailingTimer.start(),"level2"!==this.level&&"level3"!==this.level||this.hailingAlarm()):this.tutorialMode()},tutorialMode:function(){var t=.85*this.game.world.width;if("trial1-1"===this.level_arg){var i=["在 時 間 內 使 用 手 指 拖 曳 移 動 雲 朵 ","防 止 冰 雹 落 下 _"];this.trialmask2.fill(0,0,0,.6)}else if("trial1-2"===this.level_arg){var i=["若 漏 接 ， 冰 雹 落 入 玉 米 田 ， 就 會 ","損 失 一 顆 愛 心 ， 愛 心 歸 零 = 挑 戰","失 敗 !"];this.trialmask2.cls(),this.trialmask1.fill(0,0,0,.6);var e=3;this.game.time.events.loop(.5*Phaser.Timer.SECOND,function(){if(3===e)var t=2;else if(2===e)var t=3;e=t,this.mycloudLifeHandler(t)},this,e)}else if("trial2-1"===this.level_arg){var i=["接 住 大 冰 雹 會 被 冰 凍 ， 請 連 續 點 ","擊 來 脫 困 ! _"];this.trialmask2.fill(0,0,0,.6)}this.playPaused(),this.game.add.tween(this.mycloud).to({x:t},500,Phaser.Easing.Linear.In,!0).onComplete.add(this.mycloudTrialDialogue,this,0,i)},hailingAlarm:function(){var t="level3"===this.level?.3*Phaser.Timer.SECOND:.5*Phaser.Timer.SECOND,i="level3"===this.level?10*Phaser.Timer.SECOND:15*Phaser.Timer.SECOND;this.hailingAlarmPeriod=this.game.time.create(!1),this.hailingStormTimer=this.game.time.create(!1),this.hailingStormTimer.loop(t,this.hailing,this),this.hailingAlarmPeriod.loop(i,function(){"level2"===this.level?(this.hailingTimer.pause(),this.hailingAlarmPeriod.pause(),this.hailingStormTimer.start()):"level3"===this.level&&(this.level_arg="alarm",this.game.paused=!0,this.mask=this.settingmask(),this.alarmWindowGroup=this.settingtaskWindow(),this.game.input.onDown.add(this.unpause,this,0,"alarmWindow"),this.game.time.events.add(5*Phaser.Timer.SECOND,function(){this.hailingStormTimer.pause(),this.hailingAlarmPeriod.resume(),this.hailingTimer.resume(),this.level_arg="play"},this))},this),this.hailingAlarmPeriod.start()},mycloudTrialDialogue:function(){var t=arguments[2],i=this.settingDialogue(this.game.world.centerX,this.mycloud.y-1.2*this.mycloud.height);if(i.content=t,i.style={font:"16px Microsoft JhengHei",fill:"#000"},this.typewriter(i.img.x-.8*i.img.width/2,i.img.y-.8*i.img.height/2,i),"trial1-2"===this.level_arg){this.game.input.enabled=!0;this.btnGenerator("btn_1_1","沒問題!",0,!1)}},playPaused:function(){this.mycloud.inputEnabled=!1,this.game.input.enabled=!1,this.gameTimer.pause(),this.hailingTimer.pause()},playResumed:function(){"trial1-2"!==this.level_arg&&(this.game.input.enabled=!0,this.mycloud.inputEnabled=!0)},heartmaker:function(t){var i=t[0],e=t[1],a=t[2];this.heart1=this.game.add.image(10,20,i),this.heart2=this.game.add.image(this.heart1.x+.6*this.heart1.width,20,e),this.heart3=this.game.add.image(this.heart2.x+.6*this.heart2.width,20,a),this.heart1.scale.setTo(.6),this.heart2.scale.setTo(.6),this.heart3.scale.setTo(.6)},btnGenerator:function(t,i,e){var a=this.game.world.centerX,s=.75*this.game.world.height,h=e?t+"_click":t,o=this.game.add.button(a,s,h,function(){this.btnGenerator(h,i,!0)},this,1,1,0);o.anchor.setTo(.5,.2),o.width=150,o.height=48;var n={font:"22px Microsoft JhengHei",fill:"#fff"};return o.button_txt=this.game.add.text(a,s,i,n),o.button_txt.anchor.setTo(.5,0),e&&this.stateChanger(i),o},stateChanger:function(t){"trial1-2"===this.level_arg&&"沒問題!"===t&&(this.game.state.restart(!0,!1,this.level,"play"),this.backgroundMusicControler("stop"))},emitterGenerator:function(){var t=this.game.add.emitter(0,0,500);return t.makeParticles(["ice1","ice2","ice3"]),t.minParticleSpeed.set(-1e3,-500),t.maxParticleSpeed.set(1e3,500),t.gravity=0,t.setRotation(10,50),t.setScale(.5,.5,1,1,0,Phaser.Easing.Quintic.Out),t},onclickEmitter:function(t){this.clickEmitter=t.events.onInputDown.add(function(t){this.mycloud.isfreezing&&(this.mycloud.clickTimes++,this.mycloud.clickTimes>=5?(this.mycloud.clickTimes=0,this.mycloud.isfreezing=!1,this.mycloud.animations.play("static"),"trial2-1"===this.level_arg&&this.game.time.events.add(1*Phaser.Timer.SECOND,function(){this.game.state.restart(!0,!1,this.level,"play"),this.backgroundMusicControler("stop")},this)):(this.mycloudEmitter.x=t.x,this.mycloudEmitter.y=t.y,this.mycloudEmitter.start(!0,2e3,null,10),this.addQuake()))},this)},addQuake:function(){this.game.camera.shake(.01,500)},hailing:function(t,i){var e=this.game.cache.getImage("hail").width/3,a=(this.game.cache.getImage("bighail").width,i||this.game.rnd.integerInRange(0,this.game.width-e)),s=this.bigcloud.y+this.bigcloud.height;if("level1"===this.level)var h="hail";else if("trial2-1"===this.level_arg)var h="bighail";else var h=this.game.rnd.integerInRange(0,10)>7?"bighail":"hail";var o=this.hails.getFirstExists(!1,!0,a,s,h);o.scale.setTo(.5),this.game.physics.arcade.enable(o),o.body.setSize(.6*e,.6*e,.2*e,.3*e),o.body.velocity.y=300,o.size="bighail"===h?"big":"small",o.checkWorldBounds=!0,o.events.onOutOfBounds.add(function(){"level3"===this.level&&this.hitroad(o),o.destroy()},this)},frozenroadInitialize:function(){var t=[],i=this.game.height;this.frozenroad=[],this.frozenroads=this.add.group(),this.frozenroads.maxframe=1,t[0]=1*this.game.width/6,t[1]=1*this.game.width/2,t[2]=5*this.game.width/6;for(var e=0;e<3;e++)this.frozenroad[e]=this.game.add.sprite(t[e],i,"iceground"),this.frozenroad[e].frame=0,this.frozenroad[e].scale.setTo(.5,.5),this.frozenroad[e].anchor.setTo(.5,1),this.frozenroad[e].visible=!1,this.frozenroads.add(this.frozenroad[e])},hitroad:function(t){3===this.mycloud.life?t.x<=this.game.world.width/3?this.frozenroad[0].visible=!0:t.x>1*this.game.world.width/3&&t.x<=2*this.game.world.width/3?this.frozenroad[1].visible=!0:this.frozenroad[2].visible=!0:this.frozenroads.children.forEach(function(t){t.visible=!0,t.frame<this.frozenroads.maxframe&&t.frame++},this),this.mycloud.life>0&&this.mycloudLifeHandler(--this.mycloud.life)},hailCrushed:function(t,i,e,a){var s="big"===a?"bighail":"hail",h=this.hailcrushes.getFirstExists(!1,!0,t,i,s);h.anchor.setTo(.5,.5),h.scale.setTo(e);var o=h.animations.add(s);o.play(60,!1,!1),o.onComplete.addOnce(function(){h.destroy()},this)},mycloudLifeHandler:function(t){if(t>0){for(var i=[],e=0;e<3;e++)i[e]=e<=t-1?"redheart":"blackheart";this.heartmaker(i)}else this.game.state.start("Over",!0,!1,this.level),this.backgroundMusicControler("stop")},settingDialogue:function(t,i,e){var a=this.game.add.image(t,i,"dialogue");a.width=.8*this.game.world.width,a.height=.2*this.game.world.height,a.anchor.setTo(.5,.5);var s={};return s.img=a,s.content=e,s.content&&this.mycloudSpeaking(s),s},typewriter:function(t,i,e){this.content=e.content,this.line=[],this.wordIndex=0,this.lineIndex=0,this.wordDelay=100,this.lineDelay=0,this.typefinished=!1;var a=e.style||{font:"16px Microsoft JhengHei",fill:"#fff"};this.text=this.game.add.text(t,i,"",a),this.nextLine()},nextLine:function(){if(this.lineIndex===this.content.length)return void(this.typefinished=!0);this.line=this.content[this.lineIndex].split(" "),this.wordIndex=0,this.game.time.events.repeat(this.wordDelay,this.line.length,this.nextWord,this),this.lineIndex++},nextWord:function(){this.text.text=this.text.text.concat(this.line[this.wordIndex]),++this.wordIndex===this.line.length&&(this.text.text=this.text.text.concat("\n"),this.game.time.events.add(this.lineDelay,this.nextLine,this))},typeFinished:function(){this.typefinished&&(this.playResumed(),"play"!==this.level_arg&&this.hailingTimer.start(),this.typefinished=!1)},backgroundMusicControler:function(t){if("play"===t)try{this.bgsound.play()}catch(t){}else if("stop"===t)try{this.bgsound.stop()}catch(t){}else if("pause"===t)try{this.bgsound.pause()}catch(t){}else if("resume"===t)try{this.bgsound.resume()}catch(t){}}};t.exports=a},function(t,i,e){"use strict";var a={init:function(){this.level=arguments[0],this.game.scale.scaleMode=Phaser.ScaleManager.EXACT_FIT},create:function(){this.game.input.enabled=!0;var t=this.game.add.image(0,0,"fail_bg");t.width=this.game.world.width,t.height=this.game.world.height;var i=this.game.add.sprite(this.game.world.centerX,this.game.world.centerY,"failcloud");i.scale.setTo(.5),i.anchor.setTo(.5),i.animations.add("failcloud").play(5,!1,!1);var e={font:"22px Microsoft JhengHei",fill:"#ffff00"};this.game.add.text(this.game.world.centerX,i.y-i.height/2,"失敗~",e).anchor.setTo(.5),this.replaybutton=this.btnGenerator("btn_1_1","再試一次",1,!1),this.longformbutton=this.btnGenerator("btn_2_1","觀看專題",2,!1),this.sharebutton=this.btnGenerator("btn_share","分享出去吧!",0,!1)},btnGenerator:function(t,i,e,a){if(0===e)var s=.9*this.game.world.width,h=48,o=this.game.world.centerX,n=this.replaybutton.y-1.2*this.replaybutton.height,l=.5;else if(1===e)var s=.43*this.game.world.width,h=48,o=.25*this.game.world.width,n=.9*this.game.world.height,l=.45;else if(2===e)var s=.43*this.game.world.width,h=48,o=.75*this.game.world.width,n=.9*this.game.world.height,l=.55;var d=a?t+"_click":t,r=this.game.add.button(o,n,d,function(){this.btnGenerator(d,i,e,!0)},this,1,1,0);r.anchor.setTo(l,.2),r.width=s,r.height=h;var g={font:"22px Microsoft JhengHei",fill:"#fff"};return r.button_txt=this.game.add.text(o,n,i,g),r.button_txt.anchor.setTo(l,0),a&&this.stateChanger(i),r},stateChanger:function(t){switch(t){case"再試一次":this.game.state.start("Play",!0,!1,"level1","play");break;case"觀看專題":console.log("longform");break;case"分享出去吧!":console.log("share FB")}}};t.exports=a}],[1]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,